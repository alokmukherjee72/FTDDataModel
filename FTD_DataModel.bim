{
  "name": "FTD_DataModel",
  "compatibilityLevel": 1500,
  "model": {
    "name": "FTD_DataModel",
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "BI_LTAP",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "bcdwh02"
          }
        },
        "credential": {
          "AuthenticationKind": "ServiceAccount"
        }
      },
      {
        "name": "BCDWH02@BI_LTAP",
        "connectionString": "Data Source=bcdwh02;Initial Catalog=BI_LTAP;Integrated Security=True;Encrypt=False",
        "impersonationMode": "impersonateServiceAccount",
        "provider": "System.Data.SqlClient",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      },
      {
        "name": "New Data Source",
        "connectionString": "Data Source=BCDWH02;Initial Catalog=BI_LTAP;Integrated Security=True;Encrypt=False",
        "impersonationMode": "impersonateServiceAccount",
        "provider": "System.Data.SqlClient",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      },
      {
        "name": "SqlServer localhost 1",
        "connectionString": "provider=SQLNCLI11.1;integrated security=SSPI;persist security info=False;initial catalog=master;data source=BCDWH02;extended properties=\"TrustServerCertificate=true\"",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "Calendar",
        "columns": [
          {
            "name": "TIM_KEY",
            "dataType": "int64",
            "sourceColumn": "TIM_KEY"
          },
          {
            "name": "TIM_QUARTER",
            "dataType": "int64",
            "sourceColumn": "TIM_QUARTER",
            "summarizeBy": "none"
          },
          {
            "name": "TIM_QUARTER_NAME",
            "dataType": "string",
            "sourceColumn": "TIM_QUARTER_NAME"
          },
          {
            "name": "TIM_WEEK_OF_QUARTER",
            "dataType": "int64",
            "sourceColumn": "TIM_WEEK_OF_QUARTER",
            "summarizeBy": "none"
          },
          {
            "name": "TIM_WEEK_START_DATE",
            "dataType": "dateTime",
            "sourceColumn": "TIM_WEEK_START_DATE"
          },
          {
            "name": "TIM_WEEK_END_DATE",
            "dataType": "dateTime",
            "sourceColumn": "TIM_WEEK_END_DATE"
          },
          {
            "name": "TIM_DAY_OF_WEEK",
            "dataType": "int64",
            "sourceColumn": "TIM_DAY_OF_WEEK",
            "summarizeBy": "none"
          },
          {
            "name": "TIM_WEEKDAY_NAME",
            "dataType": "string",
            "sourceColumn": "TIM_WEEKDAY_NAME"
          },
          {
            "name": "TIM_YEAR_MONTH",
            "dataType": "string",
            "sourceColumn": "TIM_YEAR_MONTH"
          },
          {
            "name": "TIM_YEAR_WEEK",
            "dataType": "string",
            "sourceColumn": "TIM_YEAR_WEEK"
          },
          {
            "name": "TIM_YEAR_MONTH_WEEK",
            "dataType": "string",
            "sourceColumn": "TIM_YEAR_MONTH_WEEK"
          },
          {
            "name": "TIM_AR_PERIOD",
            "dataType": "string",
            "sourceColumn": "TIM_AR_PERIOD"
          },
          {
            "name": "TIM_MONTH_NUM_NAME",
            "dataType": "string",
            "sourceColumn": "TIM_MONTH_NUM_NAME"
          },
          {
            "name": "TIM_MONTH_START",
            "dataType": "dateTime",
            "sourceColumn": "TIM_MONTH_START"
          },
          {
            "name": "TIM_MONTH_END",
            "dataType": "dateTime",
            "sourceColumn": "TIM_MONTH_END"
          },
          {
            "name": "TIM_DAY",
            "dataType": "int64",
            "sourceColumn": "TIM_DAY",
            "summarizeBy": "none"
          },
          {
            "name": "TIM_NRF_YEAR",
            "dataType": "int64",
            "sourceColumn": "TIM_NRF_YEAR",
            "summarizeBy": "none"
          },
          {
            "name": "TIM_NRF_WEEK",
            "dataType": "int64",
            "sourceColumn": "TIM_NRF_WEEK",
            "summarizeBy": "none"
          },
          {
            "name": "TIM_NRF_YEAR_WEEK",
            "dataType": "string",
            "sourceColumn": "TIM_NRF_YEAR_WEEK"
          },
          {
            "name": "TIM_NRF_MONTH",
            "dataType": "string",
            "sourceColumn": "TIM_NRF_MONTH"
          },
          {
            "name": "TIM_MWEEK_START_DATE",
            "dataType": "dateTime",
            "sourceColumn": "TIM_MWEEK_START_DATE"
          },
          {
            "name": "TIM_MWEEK_END_DATE",
            "dataType": "dateTime",
            "sourceColumn": "TIM_MWEEK_END_DATE"
          },
          {
            "name": "TIM_DAY_OF_MWEEK",
            "dataType": "int64",
            "sourceColumn": "TIM_DAY_OF_MWEEK",
            "summarizeBy": "none"
          },
          {
            "name": "DATE",
            "dataType": "dateTime",
            "sourceColumn": "DATE"
          },
          {
            "name": "MONTH",
            "dataType": "int64",
            "sourceColumn": "MONTH",
            "summarizeBy": "none"
          },
          {
            "name": "MONTH_NAME",
            "dataType": "string",
            "sourceColumn": "MONTH_NAME",
            "sortByColumn": "MONTH"
          },
          {
            "name": "WEEK_OF_MONTH",
            "dataType": "int64",
            "sourceColumn": "WEEK_OF_MONTH",
            "summarizeBy": "none"
          },
          {
            "name": "WEEK_OF_YEAR",
            "dataType": "int64",
            "sourceColumn": "WEEK_OF_YEAR",
            "summarizeBy": "none"
          },
          {
            "name": "YEAR",
            "dataType": "int64",
            "sourceColumn": "YEAR",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "Week",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "VAR _Today = TODAY( )",
              "RETURN",
              "    IF(",
              "        YEAR( Calendar[DATE] ) = YEAR( _Today ) && WEEKNUM( Calendar[DATE] ) = WEEKNUM( _Today )",
              "            && MONTH( Calendar[DATE] ) = MONTH( _Today ),",
              "        \"Current Week\",",
              "        Calendar[TIM_YEAR_MONTH_WEEK]",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "LY Date",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": [
              "VAR CurrentYear = YEAR( Calendar[DATE] )",
              "VAR PY = CurrentYear - 1",
              "VAR WeekOfYear = Calendar[WEEK_OF_YEAR]",
              "VAR DayOfWeek = Calendar[TIM_DAY_OF_WEEK]",
              "VAR FirstDayOfYear = DATE( PY, 1, 1 )",
              "VAR FirstDayOfWeek = WEEKDAY( FirstDayOfYear, 1 )  -- Sunday as the first day of the week (1)",
              "VAR Offset = MOD( 7 - FirstDayOfWeek + 1, 7 )  -- Adjust offset for Sunday as the start day",
              "VAR FirstDayOfFirstWeek = FirstDayOfYear + Offset",
              "VAR LYDate = FirstDayOfFirstWeek + ( WeekOfYear - 1 ) * 7 + ( DayOfWeek - 1 )",
              "VAR FinalLYDate = LYDate - 7",
              "RETURN",
              "    FinalLYDate"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Calendar",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [TIM_KEY]",
                "      ,[TIM_DATE] As [DATE]",
                "      ,[TIM_YEAR] AS [YEAR]",
                "      ,[TIM_QUARTER]",
                "      ,[TIM_QUARTER_NAME]",
                "      ,[TIM_MONTH] AS [MONTH]",
                "      ,[TIM_MONTH_NAME] AS [MONTH_NAME]",
                "      ,[TIM_WEEK_OF_YEAR] AS [WEEK_OF_YEAR]",
                "      ,[TIM_WEEK_OF_QUARTER]",
                "      ,[TIM_WEEK_OF_MONTH] AS [WEEK_OF_MONTH]",
                "      ,[TIM_WEEK_START_DATE]",
                "      ,[TIM_WEEK_END_DATE]",
                "      ,[TIM_DAY_OF_WEEK]",
                "      ,[TIM_WEEKDAY_NAME]",
                "      ,[TIM_YEAR_MONTH]",
                "      ,[TIM_YEAR_WEEK]",
                "      ,[TIM_YEAR_MONTH_WEEK]",
                "      ,[TIM_AR_PERIOD]",
                "      ,[TIM_MONTH_NUM_NAME]",
                "      ,[TIM_MONTH_START]",
                "      ,[TIM_MONTH_END]",
                "      ,[TIM_DAY]",
                "      ,[TIM_NRF_YEAR]",
                "      ,[TIM_NRF_WEEK]",
                "      ,[TIM_NRF_YEAR_WEEK]",
                "      ,[TIM_NRF_MONTH]",
                "      ,[TIM_MWEEK_START_DATE]",
                "      ,[TIM_MWEEK_END_DATE]",
                "      ,[TIM_DAY_OF_MWEEK]",
                "  FROM [BI_LTAP].[dbo].[BlueCherryBI_Dim_Tim] WHERE [TIM_YEAR]>=2023"
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ]
      },
      {
        "name": "DIM_CUSTOMER_MASTER",
        "columns": [
          {
            "name": "Customer",
            "dataType": "string",
            "sourceColumn": "Customer"
          },
          {
            "name": "Customer_Name",
            "dataType": "string",
            "sourceColumn": "Customer_Name"
          },
          {
            "name": "School Group",
            "dataType": "string",
            "sourceColumn": "School Group"
          },
          {
            "name": "Bulk_Rep",
            "dataType": "string",
            "sourceColumn": "Bulk_Rep"
          },
          {
            "name": "Sales_Rep",
            "dataType": "string",
            "sourceColumn": "Sales_Rep"
          }
        ],
        "partitions": [
          {
            "name": "DIM_CUSTOMER_MASTER",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [Customer]",
                "      ,[Customer_Name]",
                ",[School Group]",
                ",[Sales_Rep]",
                ",[Bulk_Rep]",
                "  FROM [BI_LTAP].[dbo].[V_FTD_DIM_CUSTOMER_MASTER]"
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ]
      },
      {
        "name": "FACT_SALES_OP",
        "columns": [
          {
            "name": "Customer",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Customer"
          },
          {
            "name": "Order Status",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Order Status"
          },
          {
            "name": "FT SKU",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "FT SKU"
          },
          {
            "name": "Decoration code",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Decoration code"
          },
          {
            "name": "Submitted Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Submitted Date"
          },
          {
            "name": "Location",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Location"
          },
          {
            "name": "Extended Gross Price",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Extended Gross Price"
          },
          {
            "name": "Picked Total Amount",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Picked Total Amount"
          },
          {
            "name": "Picked Total Units",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Picked Total Units"
          },
          {
            "name": "Open Total Amount",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Open Total Amount"
          },
          {
            "name": "Open Total Units",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Open Total Units"
          },
          {
            "name": "Embelishment Charges",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Embelishment Charges"
          },
          {
            "name": "Embelishment Cost",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Embelishment Cost"
          },
          {
            "name": "School Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "School Code"
          },
          {
            "name": "Extended Trx Standard Cost",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Extended Trx Standard Cost"
          },
          {
            "name": "Order Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Order Type"
          },
          {
            "name": "Decoration_Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Decoration_Type"
          },
          {
            "name": "School Group",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "School Group"
          },
          {
            "name": "Pick Date",
            "dataType": "dateTime",
            "sourceColumn": "Pick Date",
            "formatString": "mm/dd/yyyy"
          },
          {
            "name": "Purchase Order No.",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Purchase Order No."
          },
          {
            "name": "Shipper",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Shipper"
          },
          {
            "type": "calculated",
            "name": "AgingDays",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DATEDIFF( FACT_SALES_OP[Submitted Date], TODAY( ), DAY )",
            "displayFolder": "Measures\\AgingDays",
            "summarizeBy": "none"
          },
          {
            "name": "Color Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Color Code"
          },
          {
            "name": "Color Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Color Name"
          },
          {
            "name": "Size Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Size Name"
          },
          {
            "name": "SKU",
            "dataType": "string",
            "sourceColumn": "SKU"
          },
          {
            "type": "calculated",
            "name": "Order Classifier",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "VAR Decorations =",
              "    CALCULATETABLE( DISTINCT( FACT_SALES_OP[Decoration_Type] ), ALLEXCEPT( FACT_SALES_OP, FACT_SALES_OP[Purchase Order No.] ) )",
              "VAR Embroidery = CONTAINS( Decorations, FACT_SALES_OP[Decoration_Type], \"OND-EMB\" )",
              "VAR HeatTransfer = CONTAINS( Decorations, FACT_SALES_OP[Decoration_Type], \"OND-HEAT\" )",
              "VAR NonDecorated = CONTAINS( Decorations, FACT_SALES_OP[Decoration_Type], \"NON-DECO\" )",
              "VAR PreEmbroidery = CONTAINS( Decorations, FACT_SALES_OP[Decoration_Type], \"PRE-EMB\" )",
              "RETURN",
              "    SWITCH(",
              "        TRUE( ),",
              "        Embroidery && HeatTransfer && NonDecorated, \"Mixed\",",
              "        Embroidery && NonDecorated, \"Mixed\",",
              "        Embroidery && HeatTransfer, \"Mixed\",",
              "        Embroidery, \"Embroidery Only\",",
              "        HeatTransfer, \"Heat Transfer Only\",",
              "        NonDecorated, \"Non-Decorated Only\",",
              "        PreEmbroidery, \"Non-Decorated Only\"",
              "    )"
            ]
          },
          {
            "type": "calculated",
            "name": "AgingDays Grouping",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF(",
              "    FACT_SALES_OP[AgingDays] >= 0 && FACT_SALES_OP[AgingDays] <= 5,",
              "    \"0-5 Days\",",
              "    IF(",
              "        FACT_SALES_OP[AgingDays] >= 6 && FACT_SALES_OP[AgingDays] <= 10,",
              "        \"6-10 Days\",",
              "        IF(",
              "            FACT_SALES_OP[AgingDays] >= 11 && FACT_SALES_OP[AgingDays] <= 15,",
              "            \"10-15 Days\",",
              "            \">15 Days\"",
              "        )",
              "    )",
              ")"
            ],
            "displayFolder": "Measures\\AgingDays"
          }
        ],
        "partitions": [
          {
            "name": "FACT_SALES_OP",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [Purchase Order No.]",
                "      ,O.[Customer]",
                "      ,[Order Status]",
                "      ,[FT SKU]",
                "      ,[Decoration code]",
                "      ,[Submitted Date]",
                "      ,[Location]",
                "      ,[School Code]",
                "      ,[Order Type]",
                "      --,R.SLSPERSON1 AS [Salesperson1]",
                "      --,R.SLSPERSON2 AS [Salesperson2]",
                "      --,[Salesperson3]",
                "      --,[Salesperson4]",
                "      ,[Pick Date]",
                "      ,[Shipper]",
                "      ,[Color Code]",
                "      ,[Size Name]",
                "      ,[Color Name]",
                "      , concat([FT SKU],[Color Name],[Size Name]) as SKU",
                "      ,[Extended Gross Price]",
                "      ,[Picked Total Amount]",
                "      ,[Picked Total Units]",
                "      ,[Open Total Amount]",
                "      ,[Open Total Units]",
                "      ,[Embelishment Charges]",
                "      ,[Embelishment Cost]",
                "      ,[Extended Trx Standard Cost]",
                "      ,[Decoration_Type]",
                "      ,[School Group] FROM [dbo].[V_FTD_FACT_SALES_OP] O",
                "\t  LEFT JOIN [dbo].[V_FTD_CUST_SALES_REP] R",
                "  on O.Customer=R.CUSTOMER",
                ""
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ],
        "measures": [
          {
            "name": "Open Amount",
            "expression": "SUM( FACT_SALES_OP[Open Total Amount] )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Open Amount"
          },
          {
            "name": "Picked Amount",
            "expression": "SUM( FACT_SALES_OP[Picked Total Amount] )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Picked Amount"
          },
          {
            "name": "Open Units",
            "expression": "SUM( FACT_SALES_OP[Open Total Units] )",
            "displayFolder": "Measures\\Open Units"
          },
          {
            "name": "Picked Units",
            "expression": "SUM( FACT_SALES_OP[Picked Total Units] )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Picked Units"
          },
          {
            "name": "Open Sales $ (With Embelishment Charges)",
            "expression": [
              "CALCULATE(",
              "    SUM( FACT_SALES_OP[Extended Gross Price] ) + SUM( FACT_SALES_OP[Embelishment Charges] ),",
              "    FACT_SALES_OP[Order Status] = \"O\"",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Open Amount"
          },
          {
            "name": "Picked Sales $ (With Embelishment Charges)",
            "expression": [
              "CALCULATE(",
              "    SUM( FACT_SALES_OP[Extended Gross Price] ) + SUM( FACT_SALES_OP[Embelishment Charges] ),",
              "    FACT_SALES_OP[Order Status] = \"P\"",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Picked Amount"
          },
          {
            "name": "Open Order Count",
            "expression": "CALCULATE( DISTINCTCOUNT( FACT_SALES_OP[Purchase Order No.] ), FACT_SALES_OP[Order Status] = \"O\" )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open Count\\Order"
          },
          {
            "name": "Picked Order Count",
            "expression": "CALCULATE( DISTINCTCOUNT( FACT_SALES_OP[Purchase Order No.] ), FACT_SALES_OP[Order Status] = \"P\" )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Picked Count\\Order"
          },
          {
            "name": "Open Style Count",
            "expression": "CALCULATE( DISTINCTCOUNT( FACT_SALES_OP[SKU] ), FACT_SALES_OP[Order Status] = \"O\" )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open Count\\Style"
          },
          {
            "name": "Picked Style Count",
            "expression": "CALCULATE( DISTINCTCOUNT( FACT_SALES_OP[SKU] ), FACT_SALES_OP[Order Status] = \"P\" )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Picked Count\\Style"
          },
          {
            "name": "Open + Pick Amount",
            "expression": "[Open Amount] + [Picked Amount]",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Open + Pick\\Amount"
          },
          {
            "name": "Open + Pick Order Count",
            "expression": "DISTINCTCOUNT( FACT_SALES_OP[Purchase Order No.] )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open + Pick\\Count\\Order"
          },
          {
            "name": "Open + Pick Units",
            "expression": "[Open Units] + [Picked Units]",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open + Pick\\Units"
          },
          {
            "name": "Open + Pick Amount MTD",
            "expression": "CALCULATE( [Open + Pick Amount], DATESMTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Open + Pick\\Amount"
          },
          {
            "name": "Open + Pick Order Count MTD",
            "expression": "CALCULATE( [Open + Pick Order Count], DATESMTD( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open + Pick\\Count\\Order"
          },
          {
            "name": "Open + Pick Units MTD",
            "expression": "CALCULATE( [Open + Pick Units], DATESMTD( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open + Pick\\Units"
          },
          {
            "name": "Open + Pick Amount YTD",
            "expression": "CALCULATE( [Open + Pick Amount], DATESYTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Open + Pick\\Amount"
          },
          {
            "name": "Open + Pick Order Count YTD",
            "expression": "CALCULATE( [Open + Pick Order Count], DATESYTD( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open + Pick\\Count\\Order"
          },
          {
            "name": "Open + Pick Units YTD",
            "expression": [
              "--CALCULATE( [Open + Pick Units], DATESYTD( Calendar[DATE] ) )",
              "",
              "TOTALYTD( [Open + Pick Units], Calendar[DATE] )"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open + Pick\\Units"
          },
          {
            "name": "Open + Pick AOV",
            "expression": "DIVIDE( [Open + Pick Amount], [Open + Pick Order Count] )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AOV"
          },
          {
            "name": "Open + Pick AOV MTD",
            "expression": "CALCULATE( [Open + Pick AOV], DATESMTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AOV"
          },
          {
            "name": "Open + Pick AOV YTD",
            "expression": "CALCULATE( [Open + Pick AOV], DATESYTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AOV"
          },
          {
            "name": "Open + Pick AUR",
            "expression": "DIVIDE( [Open + Pick Amount], [Open + Pick Units] )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AUR"
          },
          {
            "name": "Open + Pick AUR MTD",
            "expression": "CALCULATE( [Open + Pick AUR], DATESMTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AUR"
          },
          {
            "name": "Open + Pick AUR YTD",
            "expression": "CALCULATE( [Open + Pick AUR], DATESYTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AUR"
          },
          {
            "name": "Open + Pick UPT",
            "expression": "DIVIDE( [Open + Pick Units], [Open + Pick Order Count] )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\UPT"
          },
          {
            "name": "Open + Pick UPT MTD",
            "expression": "CALCULATE( [Open + Pick UPT], DATESMTD( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\UPT"
          },
          {
            "name": "Open + Pick UPT YTD",
            "expression": "CALCULATE( [Open + Pick UPT], DATESYTD( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\UPT"
          },
          {
            "name": "Open + Pick School Count",
            "expression": [
              "CALCULATE(",
              "    DISTINCTCOUNT( FACT_SALES_OP[School Code] ),",
              "    DIM_ORD_TYPE[Order Type] = \"DTS\" || DIM_ORD_TYPE[Order Type] = \"BSO\"",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open + Pick\\Count\\School"
          },
          {
            "name": "Open + Pick SKU Count",
            "expression": "DISTINCTCOUNT( FACT_SALES_OP[SKU] )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open + Pick\\Count\\Sku"
          },
          {
            "name": "Open + Pick Order Lines",
            "expression": "COUNT( FACT_SALES_OP[Purchase Order No.] )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open + Pick\\OrderLines"
          },
          {
            "name": "Open + Pick Avg Units/Order",
            "expression": "DIVIDE( [Open + Pick Units], DISTINCTCOUNT( FACT_SALES_OP[Purchase Order No.] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open + Pick\\Units"
          },
          {
            "name": "Open + Pick Customer Count",
            "expression": "CALCULATE( DISTINCTCOUNT( FACT_SALES_OP[Customer] ), DIM_ORD_TYPE[Order Type] = \"DDS\" )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Open + Pick\\Count\\Customer"
          },
          {
            "name": "Open + Pick Gross Amount",
            "expression": "SUM( FACT_SALES_OP[Extended Gross Price] )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Open + Pick\\Amount"
          },
          {
            "name": "Open + Pick Gross Amount MTD",
            "expression": "CALCULATE( [Open + Pick Gross Amount], DATESMTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Open + Pick\\Amount"
          },
          {
            "name": "Open + Pick Gross Amount YTD",
            "expression": "CALCULATE( [Open + Pick Gross Amount], DATESYTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Open + Pick\\Amount"
          },
          {
            "name": "Open + Pick Avg Lines/Order",
            "expression": "DIVIDE( [Open + Pick Order Lines], [Open + Pick Order Count] )",
            "displayFolder": "Measures\\Open + Pick\\OrderLines"
          },
          {
            "name": "Open + Pick Avg Units/Line",
            "expression": "DIVIDE( [Open + Pick Units], [Open + Pick Order Lines] )",
            "displayFolder": "Measures\\Open + Pick\\Units"
          }
        ]
      },
      {
        "name": "FACT_SHIPPED",
        "columns": [
          {
            "name": "Size Group",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Size Group"
          },
          {
            "name": "Customer",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Customer"
          },
          {
            "name": "Style Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Style Code"
          },
          {
            "name": "Color Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Color Code"
          },
          {
            "name": "Weighted Average Cost",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Weighted Average Cost"
          },
          {
            "name": "Dimen/Pack",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Dimen/Pack"
          },
          {
            "name": "Style Season",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Style Season"
          },
          {
            "name": "Season",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Season"
          },
          {
            "name": "Ship Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Ship Date"
          },
          {
            "name": "Order Line Status",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Order Line Status"
          },
          {
            "name": "Order Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Order Type"
          },
          {
            "name": "Order Type Desc",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Order Type Desc"
          },
          {
            "name": "Organization Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Organization Code"
          },
          {
            "name": "FT SKU",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "FT SKU"
          },
          {
            "name": "Location",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Location"
          },
          {
            "name": "Color Description",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Color Description"
          },
          {
            "name": "Decoration Code",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Decoration Code"
          },
          {
            "name": "Invoiced Total Amount",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Invoiced Total Amount",
            "displayFolder": "Measures\\Invoiced Amount"
          },
          {
            "name": "Invoiced Total Units",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Invoiced Total Units",
            "displayFolder": "Measures\\Invoiced Units"
          },
          {
            "name": "Purchase Order No.",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Purchase Order No."
          },
          {
            "name": "Charge Price",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Charge Price"
          },
          {
            "name": "School_Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "School_Code"
          },
          {
            "name": "Decoration_Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Decoration_Type"
          },
          {
            "name": "Extended Trx Standard Cost",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Extended Trx Standard Cost"
          },
          {
            "name": "School Group",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "School Group"
          },
          {
            "name": "Pick Date",
            "dataType": "dateTime",
            "sourceColumn": "Pick Date",
            "formatString": "mm/dd/yyyy"
          },
          {
            "name": "Shipper",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Shipper"
          },
          {
            "name": "Submitted Date",
            "dataType": "dateTime",
            "sourceColumn": "Submitted Date",
            "formatString": "mm/dd/yyyy"
          },
          {
            "type": "calculated",
            "name": "Days to Ship (Submitted Date & Ship Date)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DATEDIFF( FACT_SHIPPED[Submitted Date], FACT_SHIPPED[Ship Date], DAY )",
            "displayFolder": "Measures\\Days To Ship",
            "summarizeBy": "average"
          },
          {
            "type": "calculated",
            "name": "Days to Ship (Interface Date & Ship Date)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DATEDIFF( FACT_SHIPPED[Pick Date], FACT_SHIPPED[Ship Date], DAY )",
            "displayFolder": "Measures\\Days To Ship",
            "summarizeBy": "average"
          },
          {
            "type": "calculated",
            "name": "Days to Ship (Submitted Date & Interface Date)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DATEDIFF( FACT_SHIPPED[Submitted Date], FACT_SHIPPED[Pick Date], DAY )",
            "displayFolder": "Measures\\Days To Ship",
            "summarizeBy": "average"
          },
          {
            "type": "calculated",
            "name": "Aging Days (Submitted & Today)",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "DATEDIFF( FACT_SHIPPED[Submitted Date], TODAY( ), DAY )",
            "displayFolder": "Measures\\Aging Orders",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "Aging Days Grouping",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF(",
              "    FACT_SHIPPED[Aging Days (Submitted & Today)] >= 0 && FACT_SHIPPED[Aging Days (Submitted & Today)] <= 5,",
              "    \"0-5 Days\",",
              "    IF(",
              "        FACT_SHIPPED[Aging Days (Submitted & Today)] >= 6 && FACT_SHIPPED[Aging Days (Submitted & Today)] <= 10,",
              "        \"6-10 Days\",",
              "        IF(",
              "            FACT_SHIPPED[Aging Days (Submitted & Today)] >= 11 && FACT_SHIPPED[Aging Days (Submitted & Today)] <= 15,",
              "            \"10-15 Days\",",
              "            \">15 Days\"",
              "        )",
              "    )",
              ")"
            ],
            "displayFolder": "Measures\\Aging Orders",
            "summarizeBy": "none"
          },
          {
            "name": "Channel",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Channel"
          },
          {
            "name": "Embelishment Cost",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Embelishment Cost"
          },
          {
            "name": "Extended Gross Price",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Extended Gross Price"
          },
          {
            "name": "Size Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Size Name"
          },
          {
            "name": "Color Name",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Color Name"
          },
          {
            "name": "SKU",
            "dataType": "string",
            "sourceColumn": "SKU"
          },
          {
            "type": "calculated",
            "name": "Order Classifier",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "VAR Decorations =",
              "    CALCULATETABLE( DISTINCT( FACT_SHIPPED[Decoration_Type] ), ALLEXCEPT( FACT_SHIPPED, FACT_SHIPPED[Purchase Order No.] ) )",
              "VAR Embroidery = CONTAINS( Decorations, FACT_SHIPPED[Decoration_Type], \"OND-EMB\" )",
              "VAR HeatTransfer = CONTAINS( Decorations, FACT_SHIPPED[Decoration_Type], \"OND-HEAT\" )",
              "VAR NonDecorated = CONTAINS( Decorations, FACT_SHIPPED[Decoration_Type], \"NON-DECO\" )",
              "VAR PreEmbroidery = CONTAINS( Decorations, FACT_SHIPPED[Decoration_Type], \"PRE-EMB\" )",
              "RETURN",
              "    SWITCH(",
              "        TRUE( ),",
              "        Embroidery && HeatTransfer && NonDecorated, \"Mixed\",",
              "        Embroidery && NonDecorated, \"Mixed\",",
              "        Embroidery && HeatTransfer, \"Mixed\",",
              "        Embroidery, \"Embroidery Only\",",
              "        HeatTransfer, \"Heat Transfer Only\",",
              "        NonDecorated, \"Non-Decorated Only\",",
              "        PreEmbroidery, \"Non-Decorated Only\"",
              "    )"
            ]
          }
        ],
        "partitions": [
          {
            "name": "FACT_SHIPPED",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [Size Group]",
                "      ,S.[Customer]",
                "      ,[Style Code]",
                "      ,[Color Code]",
                "      ,[Size Name]",
                "      ,[Color Name]",
                "      , concat([FT SKU],[Color Name],[Size Name]) as SKU",
                "      ,[Weighted Average Cost]",
                "      ,[Dimen/Pack]",
                "      ,[Style Season]",
                "      ,[Season]",
                "      ,[Ship Date]",
                "      ,[Order Line Status]",
                "      ,[Order Type]",
                "      ,[Order Type Desc]",
                "      ,[Organization Code]",
                "      ,[FT SKU]",
                "      ,[School_Code]",
                "      ,[Location]",
                "      ,[Color Description]",
                "      ,[Decoration Code]",
                "      ,[Purchase Order No.]",
                "      --,R.SLSPERSON1 AS [Salesperson1]",
                "      --,R.SLSPERSON2 AS [Salesperson2]",
                "      --,[Salesperson3]",
                "      --,[Salesperson4]",
                "      ,[Pick Date]",
                "      ,[Shipper]",
                "      ,[Invoiced Total Amount]",
                "      ,[Invoiced Total Units]",
                "      ,[Charge Price]",
                "      ,[Extended Trx Standard Cost]",
                "      ,[Decoration_Type]",
                "      ,[School Group]",
                "      ,[Submitted Date] ",
                "      ,[Extended Gross Price]",
                "      ,[Embelishment Cost]",
                "\t  ,[Channel] = CASE WHEN [Order Type] IN ('BSO','DTS') THEN 'DTS'",
                "\t                    WHEN [Order Type] IN ('DTC') THEN 'DTC'",
                "               WHEN [Order Type] IN ('DDS') THEN 'DDS'",
                "               ELSE 'Others'",
                "\t\t\t   END",
                "\t  FROM [dbo].[V_FTD_FACT_SHIPPED] S",
                "\t  LEFT JOIN [dbo].[V_FTD_CUST_SALES_REP] R",
                "\t  on S.Customer=R.CUSTOMER",
                "UNION ALL",
                "SELECT 'TBD' AS [Size Group]",
                "      ,COALESCE(S.CUSTOMER,'FTD9999') AS [Customer]",
                "      ,'TBD' AS [Style Code]",
                "      ,'TBD' AS [Color Code]",
                "      ,'TBD' AS [Size Name]",
                "      ,'TBD' AS [Color Name]",
                "      ,'TBD' AS [SKU]",
                "\t  ,[WAC_COST] AS [Weighted Average Cost]",
                "      ,'TBD' AS [Dimen/Pack]",
                "      ,'YRR' AS [Style Season]",
                "      ,'YR' AS [Season]",
                "\t  , [SHIPDATE] AS [Ship Date]",
                "\t  , 'I' AS [Order Line Status]",
                "      , (CASE WHEN COALESCE([FTD Order Type],'') ='' AND ([MasterSchoolCode] like 'QS%' OR [MasterSchoolCode] LIKE 'BQ%') THEN 'DTS'",
                "\t         WHEN COALESCE([FTD Order Type],'') ='' AND [MasterSchoolCode] = 'QWFDFD' THEN 'DTC'",
                "\t\t\t WHEN COALESCE([FTD Order Type],'') <> '' THEN [FTD Order Type]",
                "\t\t     ELSE 'DDS'",
                "       END) AS [Order Type]   ",
                "      ,'' AS [Order Type Desc]",
                "\t  ,'FTD' AS [Organization Code]",
                "      ,[FT SKU] AS [FT SKU]",
                "      ,[MasterSchoolCode] AS [School_Code]",
                "      ,CASE WHEN [Location] = 'M3' THEN 'RAD'",
                "\t       WHEN [Location] = 'PLO' THEN 'RYD' ",
                "\t\t   ELSE ''",
                "\t\t   END AS [Location]",
                "      ,'' AS [Color Description]",
                "      ,'' AS [Decoration Code]",
                "      ,[WebOrderNum] AS [Purchase Order No.]",
                "      --,R.SLSPERSON1 AS [Salesperson1]",
                "      --,R.SLSPERSON2 AS [Salesperson2]",
                "      --,'' AS [Salesperson3]",
                "      --,'' AS [Salesperson4]",
                "      ,'' AS [Pick Date]",
                "      ,'' AS [Shipper]",
                "      ,[TOTAL] AS [Invoiced Total Amount]",
                "      ,[QTY] AS [Invoiced Total Units]",
                "      ,[Embroidery] AS [Charge Price]",
                "      ,[WAC_COST] AS [Extended Trx Standard Cost]",
                "      , [Decoration_Type] = CASE ",
                "        WHEN [DecorationOrderIDLine] IS NULL THEN 'PRE-EMB'",
                "        WHEN [DecorationOrderIDLine] = 'Embroidery' THEN 'OND-EMB'",
                "        WHEN [DecorationOrderIDLine] = 'Heat Transfer' THEN 'OND-HEAT'",
                "        WHEN [DecorationOrderIDLine] = 'Not Decorated' THEN 'NON-DECO'",
                "\t\tELSE 'NON-DECO'",
                "\t\tEND",
                "      ,'' AS [School Group]",
                "      ,[OrderDate] AS [Submitted Date]",
                "      ,[Acctg_Gross_Income] AS [Extended Gross Price]",
                "\t  ,[EmbroideryCost] AS [Embelishment Cost]",
                "\t  ,Channel = CASE WHEN [CustomerType] = 'Direct To Consumer' AND [DIVISION] IN ('BF', 'FC', 'FD', 'FW', 'S2', 'SB', 'DD', 'WP') THEN 'DTC'",
                "\t             WHEN [CustomerType] = 'Shop by School' AND [DIVISION] IN ('AA','AC','BF','BK','BL','BS','BT','BW','EH','FC','FD','FW','JC','JS','JT','KO','LT','MC','OS','S2','SB','SC','SD','SK','SM','SS','WM','WS','WT','WP') THEN 'DTS'",
                "\t\t\t\t WHEN [DIVISION] IN ('AC', 'AZ', 'BK', 'BL', 'BS', 'JC', 'JS', 'LT', 'MC', 'SS', 'WM', 'WT','TA') THEN 'DDS'",
                "\t\t\t\t ELSE 'Others'",
                "\t\t\t\t END",
                "  FROM [BI_Planning].[dbo].[V_LTFTCOMSALESORDER] O",
                "  LEFT JOIN V_FTD_CUST_STORE S ON",
                "  O.MasterSchoolCode=S.SCHOOL_CODE",
                "  LEFT JOIN [dbo].[V_FTD_CUST_SALES_REP] R",
                "  on S.Customer=R.CUSTOMER",
                "  WHERE YEAR([SHIPDATE])=2024 AND [Sample_NCR_Filter]='Y' AND [MasterSchoolCode] <>''"
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ],
        "measures": [
          {
            "name": "Invoiced Amount",
            "expression": [
              "[Invoiced $ (With Embelishment Charges)]",
              "    //SUM( FACT_SHIPPED[Invoiced Total Amount] ),"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\TY"
          },
          {
            "name": "Invoiced Units",
            "expression": "SUM( FACT_SHIPPED[Invoiced Total Units] )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units"
          },
          {
            "name": "Invoiced Order Count",
            "expression": "DISTINCTCOUNT( FACT_SHIPPED[Purchase Order No.] )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Order Count"
          },
          {
            "name": "COGS @ WAC",
            "expression": "SUMX( FACT_SHIPPED, FACT_SHIPPED[Invoiced Total Units] * FACT_SHIPPED[Weighted Average Cost] )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Cost"
          },
          {
            "name": "Gross Margin $ @ WAC",
            "expression": "[Invoiced $ (With Embelishment Charges)] - [COGS @ WAC]",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Margin"
          },
          {
            "name": "Invoiced $ (With Embelishment Charges)",
            "expression": "SUM( FACT_SHIPPED[Invoiced Total Amount] ) + SUM( FACT_SHIPPED[Charge Price] )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\TY"
          },
          {
            "name": "Gross Margin % @ WAC",
            "expression": "DIVIDE( [Gross Margin $ @ WAC], [Invoiced $ (With Embelishment Charges)], 0 )",
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Margin"
          },
          {
            "name": "AUR",
            "expression": "DIVIDE( [Invoiced Amount], [Invoiced Units] )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AUR"
          },
          {
            "name": "AOV",
            "expression": "DIVIDE( [Invoiced Amount], [Invoiced Order Count] )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AOV"
          },
          {
            "name": "UPT",
            "expression": "DIVIDE( [Invoiced Units], [Invoiced Order Count] )",
            "formatString": "#,##0.0",
            "displayFolder": "Measures\\UPT"
          },
          {
            "name": "AUR MTD",
            "expression": "CALCULATE( [AUR], DATESMTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AUR"
          },
          {
            "name": "AUR YTD",
            "expression": "CALCULATE( [AUR], DATESYTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AUR"
          },
          {
            "name": "AOV MTD",
            "expression": "CALCULATE( [AOV], DATESMTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AOV"
          },
          {
            "name": "AOV YTD",
            "expression": "CALCULATE( [AOV], DATESYTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0.00",
            "displayFolder": "Measures\\AOV"
          },
          {
            "name": "UPT MTD",
            "expression": "CALCULATE( [UPT], DATESMTD( Calendar[DATE] ) )",
            "formatString": "#,##0.0",
            "displayFolder": "Measures\\UPT"
          },
          {
            "name": "UPT YTD",
            "expression": "CALCULATE( [UPT], DATESYTD( Calendar[DATE] ) )",
            "formatString": "#,##0.0",
            "displayFolder": "Measures\\UPT"
          },
          {
            "name": "Invoiced Amount MTD",
            "expression": "CALCULATE( [Invoiced Amount], DATESMTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\TY"
          },
          {
            "name": "Invoiced Amount YTD",
            "expression": "CALCULATE( [Invoiced Amount], DATESYTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\TY"
          },
          {
            "name": "Invoiced Units MTD",
            "expression": "CALCULATE( [Invoiced Units], DATESMTD( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units"
          },
          {
            "name": "Invoiced Units YTD",
            "expression": "CALCULATE( [Invoiced Units], DATESYTD( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units"
          },
          {
            "name": "Invoiced Amount LW",
            "expression": [
              "VAR LastSunday = TODAY( ) - WEEKDAY( TODAY( ), 2 )",
              "VAR LastMonday = LastSunday - 6                ",
              "",
              "RETURN",
              "    CALCULATE(",
              "        [Invoiced Amount],",
              "        Calendar[DATE] >= LastMonday,",
              "        Calendar[DATE] <= LastSunday",
              "    )"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\TY"
          },
          {
            "name": "Invoiced Units LW",
            "expression": [
              "VAR LastSunday = TODAY( ) - WEEKDAY( TODAY( ), 2 )  // Get last Sunday",
              "VAR LastMonday = LastSunday - 6                // Get last Monday",
              "",
              "RETURN",
              "    CALCULATE(",
              "        [Invoiced Units],  // Replace with your column",
              "        Calendar[DATE] >= LastMonday,",
              "        Calendar[DATE] <= LastSunday",
              "    )"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units"
          },
          {
            "name": "Invoiced Order Count MTD",
            "expression": "CALCULATE( [Invoiced Order Count], DATESMTD( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Order Count"
          },
          {
            "name": "Invoiced Order Count YTD",
            "expression": "CALCULATE( [Invoiced Order Count], DATESYTD( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Order Count"
          },
          {
            "name": "Invoiced School Count",
            "expression": [
              "CALCULATE(",
              "    DISTINCTCOUNT( FACT_SHIPPED[School_Code] ),",
              "    DIM_ORD_TYPE[Order Type] = \"DTS\" || DIM_ORD_TYPE[Order Type] = \"BSO\"",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Count\\School"
          },
          {
            "name": "Invoiced SKU Count",
            "expression": "DISTINCTCOUNT( FACT_SHIPPED[SKU] )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Count\\SKU"
          },
          {
            "name": "Invoiced Order Lines",
            "expression": "COUNT( FACT_SHIPPED[Purchase Order No.] )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Order Lines"
          },
          {
            "name": "Invoiced Customer Count",
            "expression": "CALCULATE( DISTINCTCOUNT( FACT_SHIPPED[Customer] ), DIM_ORD_TYPE[Order Type] = \"DDS\" )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Count\\Customer"
          },
          {
            "name": "Invoiced Amount Today",
            "expression": "CALCULATE( [Invoiced Amount], Calendar[DATE] = TODAY( ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\TY"
          },
          {
            "name": "Invoiced Amount Previous Day",
            "expression": "CALCULATE( [Invoiced Amount], PREVIOUSDAY( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\TY"
          },
          {
            "name": "Invoiced Amount WTD",
            "expression": [
              "VAR StartOfWeek = TODAY( ) - WEEKDAY( TODAY( ), 1 ) + 1",
              "RETURN",
              "    CALCULATE( [Invoiced Amount], DATESBETWEEN( Calendar[DATE], StartOfWeek, TODAY( ) ) )"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\TY"
          },
          {
            "name": "Invoiced Amount LW (upto Current day of week)",
            "expression": [
              "VAR TodayDayOfWeek = WEEKDAY( TODAY( ), 1 ) ",
              "VAR LastWeekStart = TODAY( ) - TodayDayOfWeek - 7",
              "VAR LastWeekEnd = TODAY( ) - TodayDayOfWeek",
              "",
              "RETURN",
              "    CALCULATE( [Invoiced Amount], DATESBETWEEN( Calendar[DATE], LastWeekStart, LastWeekEnd ) )"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\TY"
          },
          {
            "name": "Invoiced Amount Previous Month",
            "expression": "CALCULATE( [Invoiced Amount], PREVIOUSMONTH( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\TY"
          },
          {
            "name": "Invoiced Avg Lines/Order",
            "expression": "DIVIDE( [Invoiced Order Lines], [Invoiced Order Count] )",
            "displayFolder": "Measures\\Invoiced Order Lines"
          },
          {
            "name": "Invoiced Avg Units/Line",
            "expression": "DIVIDE( [Invoiced Units], [Invoiced Order Lines] )",
            "formatString": "#,##0.00",
            "displayFolder": "Measures\\Invoiced Units"
          },
          {
            "name": "Invoiced Avg Units/Order",
            "expression": "DIVIDE( [Invoiced Units], [Invoiced Order Count] )",
            "formatString": "#,##0.00",
            "displayFolder": "Measures\\Invoiced Units"
          },
          {
            "name": "Avg Days to Ship (Submitted & Interface)",
            "expression": "AVERAGE( FACT_SHIPPED[Days to Ship (Submitted Date & Interface Date)] )",
            "formatString": "#,##0.00",
            "displayFolder": "Measures\\Average Days To Ship"
          },
          {
            "name": "Avg Days to Ship (Interface & Ship)",
            "expression": "AVERAGE( FACT_SHIPPED[Days to Ship (Interface Date & Ship Date)] )",
            "formatString": "#,##0.00",
            "displayFolder": "Measures\\Average Days To Ship"
          },
          {
            "name": "Avg Days to Ship (Submitted & Ship)",
            "expression": "AVERAGE( FACT_SHIPPED[Days to Ship (Submitted Date & Ship Date)] )",
            "formatString": "#,##0.00",
            "displayFolder": "Measures\\Average Days To Ship"
          },
          {
            "name": "Invoiced Gross Amount",
            "expression": "SUM( FACT_SHIPPED[Extended Gross Price] )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount"
          },
          {
            "name": "Invoiced Gross Amount Today",
            "expression": "CALCULATE( [Invoiced Gross Amount], FILTER( ALL( Calendar ), Calendar[DATE] = TODAY( ) ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount"
          },
          {
            "name": "Invoiced Gross Amount WTD Current Week",
            "expression": [
              "VAR StartOfWeek = TODAY( ) - WEEKDAY( TODAY( ), 1 ) + 1",
              "RETURN",
              "    CALCULATE( [Invoiced Gross Amount], DATESBETWEEN( Calendar[DATE], StartOfWeek, TODAY( ) ) )"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount"
          },
          {
            "name": "Invoiced Gross Amount MTD",
            "expression": "CALCULATE( [Invoiced Gross Amount], DATESMTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount"
          },
          {
            "name": "Invoiced Gross Amount YTD",
            "expression": "CALCULATE( [Invoiced Gross Amount], DATESYTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount"
          },
          {
            "name": "Invoiced Gross Amount LY (LY Date)",
            "expression": [
              "SUMX(",
              "    SUMMARIZE(",
              "        Calendar,",
              "        Calendar[YEAR],",
              "        Calendar[DATE],",
              "        \"SalesAmount_LastYear\",",
              "            VAR _maxLYDate = MAX( Calendar[LY Date] )",
              "            VAR _maxLYDate1 = MAX( Calendar[LY Date] )",
              "            RETURN",
              "                CALCULATE( [Invoiced Gross Amount], Calendar[YEAR] = YEAR( _maxLYDate ), Calendar[DATE] = _maxLYDate1 )",
              "    ),",
              "    [SalesAmount_LastYear]",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "Invoiced Gross Amount Previous Day",
            "expression": "CALCULATE( [Invoiced Gross Amount], FILTER( ALL( Calendar ), Calendar[DATE] = TODAY() - 1 ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount"
          },
          {
            "name": "Invoiced Units Previous Day",
            "expression": "CALCULATE( [Invoiced Units], PREVIOUSDAY( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units"
          },
          {
            "name": "Invoiced Units Today",
            "expression": "CALCULATE( [Invoiced Units], Calendar[DATE] = TODAY( ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units"
          },
          {
            "name": "Invoiced Units WTD",
            "expression": [
              "VAR StartOfWeek = TODAY( ) - WEEKDAY( TODAY( ), 1 ) + 1",
              "RETURN",
              "    CALCULATE( [Invoiced Units], DATESBETWEEN( Calendar[DATE], StartOfWeek, TODAY( ) ) )"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units"
          },
          {
            "name": "Invoiced Order Count Previous Day",
            "expression": "CALCULATE( [Invoiced Order Count], PREVIOUSDAY( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Order Count"
          },
          {
            "name": "Invoiced Order Count Today",
            "expression": "CALCULATE( [Invoiced Order Count], Calendar[DATE] = TODAY( ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Order Count"
          },
          {
            "name": "Invoiced Order Count WTD",
            "expression": [
              "VAR StartOfWeek = TODAY( ) - WEEKDAY( TODAY( ), 1 ) + 1",
              "RETURN",
              "    CALCULATE( [Invoiced Order Count], DATESBETWEEN( Calendar[DATE], StartOfWeek, TODAY( ) ) )"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Order Count"
          },
          {
            "name": "Invoiced Amount LY",
            "expression": "CALCULATE( [Invoiced Amount], SAMEPERIODLASTYEAR( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\LY"
          },
          {
            "name": "Invoiced Amount LY MTD",
            "expression": "CALCULATE( [Invoiced Amount LY], DATESMTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\LY"
          },
          {
            "name": "Invoiced Amount LY YTD",
            "expression": "CALCULATE( [Invoiced Amount LY], DATESYTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\LY"
          },
          {
            "name": "% LY Invoiced Amount",
            "expression": "IFERROR( DIVIDE( [Invoiced Amount] - [Invoiced Amount LY], [Invoiced Amount LY] ), 1 )",
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Amount\\LY"
          },
          {
            "name": "% LY Invoiced Amount MTD",
            "expression": [
              "VAR LY_Amount = [Invoiced Amount LY MTD]",
              "VAR Curr_Amount = [Invoiced Amount MTD]",
              "RETURN",
              "    IF(",
              "        NOT ISBLANK(LY_Amount) && LY_Amount <> 0,",
              "        DIVIDE(Curr_Amount - LY_Amount, LY_Amount, 0),",
              "        BLANK()",
              "    )"
            ],
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Amount\\LY"
          },
          {
            "name": "% LY Invoiced Amount YTD",
            "expression": [
              "VAR LY_Amount = [Invoiced Amount LY YTD]",
              "VAR Curr_Amount = [Invoiced Amount YTD]",
              "RETURN",
              "    IF(",
              "        NOT ISBLANK( LY_Amount ) && LY_Amount <> 0,",
              "        DIVIDE( Curr_Amount - LY_Amount, LY_Amount, 0 ),",
              "        BLANK( )",
              "    )"
            ],
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Amount\\LY"
          },
          {
            "name": "Invoiced Gross Amount LY",
            "expression": "CALCULATE( [Invoiced Gross Amount], SAMEPERIODLASTYEAR( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "Invoiced Gross Amount LY MTD",
            "expression": "CALCULATE( [Invoiced Gross Amount LY], DATESMTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "Invoiced Gross Amount LY YTD",
            "expression": "CALCULATE( [Invoiced Gross Amount LY], DATESYTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "Invoiced Units LY",
            "expression": "CALCULATE( [Invoiced Units], SAMEPERIODLASTYEAR( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units\\LY"
          },
          {
            "name": "Invoiced Units LY MTD",
            "expression": "CALCULATE( [Invoiced Units LY], DATESMTD( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units\\LY"
          },
          {
            "name": "Invoiced Units LY YTD",
            "expression": "CALCULATE( [Invoiced Units LY], DATESYTD( Calendar[DATE] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units\\LY"
          },
          {
            "name": "% LY Invoiced Gross Amount",
            "expression": "IFERROR( DIVIDE( [Invoiced Gross Amount] - [Invoiced Gross Amount LY], [Invoiced Gross Amount LY] ), 1 )",
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "% LY Invoiced Gross Amount MTD",
            "expression": [
              "VAR LY_Amount = [Invoiced Gross Amount LY MTD]",
              "VAR Curr_Amount = [Invoiced Gross Amount MTD]",
              "RETURN",
              "    IF(",
              "        NOT ISBLANK( LY_Amount ) && LY_Amount <> 0,",
              "        DIVIDE( Curr_Amount - LY_Amount, LY_Amount, 0 ),",
              "        BLANK( )",
              "    )"
            ],
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "% LY Invoiced Gross Amount YTD",
            "expression": [
              "VAR LY_Amount = [Invoiced Gross Amount LY YTD]",
              "VAR Curr_Amount = [Invoiced Gross Amount YTD]",
              "RETURN",
              "    IF(",
              "        NOT ISBLANK( LY_Amount ) && LY_Amount <> 0,",
              "        DIVIDE( Curr_Amount - LY_Amount, LY_Amount, 0 ),",
              "        BLANK( )",
              "    )"
            ],
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "Invoiced Gross Amount Variance MTD",
            "expression": "[Invoiced Gross Amount MTD] - [Invoiced Gross Amount LY MTD]",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "Invoiced Gross Amount Variance YTD",
            "expression": "[Invoiced Gross Amount YTD] - [Invoiced Gross Amount LY YTD]",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "Invoiced Units Variance MTD",
            "expression": "[Invoiced Units MTD] - [Invoiced Units LY MTD]",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units\\LY"
          },
          {
            "name": "Invoiced Units Variance YTD",
            "expression": "[Invoiced Units YTD] - [Invoiced Units LY YTD]",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Invoiced Units\\LY"
          },
          {
            "name": "% LY Invoiced Units",
            "expression": "IFERROR( DIVIDE( [Invoiced Units] - [Invoiced Units LY], [Invoiced Units LY] ), 1 )",
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Units\\LY"
          },
          {
            "name": "% LY Invoiced Units MTD",
            "expression": [
              "VAR LY_Units = [Invoiced Units LY MTD]",
              "VAR Curr_Units = [Invoiced Units MTD]",
              "RETURN",
              "    IF(",
              "        NOT ISBLANK( LY_Units ) && LY_Units <> 0,",
              "        DIVIDE( Curr_Units - LY_Units, LY_Units, 0 ),",
              "        BLANK( )",
              "    )"
            ],
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Units\\LY"
          },
          {
            "name": "% LY Invoiced Units YTD",
            "expression": [
              "VAR LY_Units = [Invoiced Units LY YTD]",
              "VAR Curr_Units = [Invoiced Units YTD]",
              "RETURN",
              "    IF(",
              "        NOT ISBLANK( LY_Units ) && LY_Units <> 0,",
              "        DIVIDE( Curr_Units - LY_Units, LY_Units, 0 ),",
              "        BLANK( )",
              "    )"
            ],
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Units\\LY"
          },
          {
            "name": "Amount LY (By week of Day)",
            "expression": [
              "SUMX(",
              "    SUMMARIZE(",
              "        Calendar,",
              "        Calendar[YEAR],",
              "        Calendar[DATE],",
              "        \"SalesAmount_LastYear\",",
              "            VAR _maxLYDate = MAX( Calendar[LY Date] )",
              "            VAR _maxLYDate1 = MAX( Calendar[LY Date] )",
              "            RETURN",
              "                CALCULATE( [Invoiced Amount], Calendar[YEAR] = YEAR( _maxLYDate ), Calendar[DATE] = _maxLYDate1 )",
              "    ),",
              "    [SalesAmount_LastYear]",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Amount\\LY"
          },
          {
            "name": "% LY Invoiced Gross Amount (LY Date)",
            "expression": "IFERROR( DIVIDE( [Invoiced Gross Amount] - [Invoiced Gross Amount LY (LY Date)], [Invoiced Gross Amount LY (LY Date)] ), 1 )",
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "Invoiced Gross Amount LY MTD (LY Date)",
            "expression": "CALCULATE( [Invoiced Gross Amount LY (LY Date)], DATESMTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "Invoiced Gross Amount LY YTD (LY Date)",
            "expression": "CALCULATE( [Invoiced Gross Amount LY (LY Date)], DATESYTD( Calendar[DATE] ) )",
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "% LY Invoiced Gross Amount MTD (LY Date)",
            "expression": [
              "VAR LY_Amount = [Invoiced Gross Amount LY MTD (LY Date)]",
              "VAR Curr_Amount = [Invoiced Gross Amount MTD]",
              "RETURN",
              "    IF(",
              "        NOT ISBLANK( LY_Amount ) && LY_Amount <> 0,",
              "        DIVIDE( Curr_Amount - LY_Amount, LY_Amount, 0 ),",
              "        BLANK( )",
              "    )"
            ],
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "% LY Invoiced Gross Amount YTD (LY Date)",
            "expression": [
              "VAR LY_Amount = [Invoiced Gross Amount LY YTD (LY Date)]",
              "VAR Curr_Amount = [Invoiced Gross Amount YTD]",
              "RETURN",
              "    IF(",
              "        NOT ISBLANK( LY_Amount ) && LY_Amount <> 0,",
              "        DIVIDE( Curr_Amount - LY_Amount, LY_Amount, 0 ),",
              "        BLANK( )",
              "    )"
            ],
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Invoiced Gross Amount\\LY"
          },
          {
            "name": "Embl Cost",
            "expression": [
              "SUMX(",
              "    FACT_SHIPPED,",
              "    FACT_SHIPPED[Invoiced Total Units]",
              "        * FACT_SHIPPED[Embelishment Cost]",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Cost"
          }
        ]
      },
      {
        "name": "Refresh Date",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "RefreshDate",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[RefreshDate]",
            "formatString": "mm-dd-yyyy hh:nn:ss"
          }
        ],
        "partitions": [
          {
            "name": "Refresh Date",
            "mode": "import",
            "source": {
              "type": "calculated",
              "expression": "ROW( \"RefreshDate\", NOW( ) )"
            }
          }
        ]
      },
      {
        "name": "FCT_FCST",
        "columns": [
          {
            "name": "CHANNEL",
            "dataType": "string",
            "sourceColumn": "CHANNEL"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "FORECAST_AMOUNT",
            "dataType": "decimal",
            "sourceColumn": "FORECAST_AMOUNT"
          },
          {
            "name": "DIVISION",
            "dataType": "string",
            "sourceColumn": "DIVISION"
          }
        ],
        "partitions": [
          {
            "name": "FCT_FCST",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [CHANNEL]",
                "      ,CAST([MONTH_END_DATE] AS DATE) AS [Date]",
                "      ,[FORECAST_AMOUNT]",
                "      ,'Z' AS DIVISION",
                "       FROM [BI_Planning].[FTDirect].[ForecastByChannelMonthly]"
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ]
      },
      {
        "name": "DIM_SCHOOL_MASTER",
        "columns": [
          {
            "name": "School_Code",
            "dataType": "string",
            "sourceColumn": "School_Code"
          },
          {
            "name": "School_Name",
            "dataType": "string",
            "sourceColumn": "School_Name"
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City"
          },
          {
            "name": "State",
            "dataType": "string",
            "sourceColumn": "State"
          },
          {
            "name": "Zip_Code",
            "dataType": "string",
            "sourceColumn": "Zip_Code"
          },
          {
            "name": "Country",
            "dataType": "string",
            "sourceColumn": "Country"
          },
          {
            "type": "calculated",
            "name": "Region",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "LOOKUPVALUE(DIM_STATE[Region],DIM_STATE[State],DIM_SCHOOL_MASTER[State],DIM_STATE[Country],DIM_SCHOOL_MASTER[Country])"
          }
        ],
        "partitions": [
          {
            "name": "DIM_SCHOOL_MASTER",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT",
                "    [School_Code],",
                "    [School_Name],",
                "    [City],",
                "    [State],",
                "    [Zip_Code],",
                "    [Country]",
                "FROM",
                "    [dbo].[V_FTD_DIM_SCHOOL_MASTER]"
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ]
      },
      {
        "name": "DIM_LOCATION_MASTER",
        "columns": [
          {
            "name": "Location",
            "dataType": "string",
            "sourceColumn": "Location"
          },
          {
            "name": "Location_Name",
            "dataType": "string",
            "sourceColumn": "Location_Name"
          },
          {
            "name": "Organization_Code",
            "dataType": "string",
            "sourceColumn": "Organization_Code"
          }
        ],
        "partitions": [
          {
            "name": "DIM_LOCATION_MASTER",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [Location]",
                "      ,[Location_Name]",
                "      ,[Organization_Code]",
                "  FROM [BI_LTAP].[dbo].[V_FTD_DIM_LOCATION_MASTER]"
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ]
      },
      {
        "name": "DIM_ORD_TYPE",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Order Type",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Order Type]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Order Type Desc",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Order Type Desc]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Order Type Group",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Order Type Group]"
          }
        ],
        "partitions": [
          {
            "name": "DIM_ORD_TYPE",
            "mode": "import",
            "source": {
              "type": "calculated",
              "expression": [
                "DATATABLE(",
                "    \"Order Type\", STRING,",
                "    \"Order Type Desc\", STRING,",
                "    \"Order Type Group\", STRING,",
                "    {",
                "        { \"BSO\", \"Bulk\", \"DTS\" },",
                "        { \"DDS\", \"Drop Ship\", \"DDS\" },",
                "        { \"DTC\", \"Direct To Consumer\", \"DTC\" },",
                "        { \"DTS\", \"Direct To School\", \"DTS\" },",
                "        { \"TRN\", \"Transfer Order\", \"TRN\" },",
                "        { \"SMP\", \"Sample Orders\", \"SMP\" },",
                "        { \"CNF\", \"Confirmed\", \"CNF\" },",
                "        { \"NCR\", \"No Charge Replacement\", \"NCR\" }",
                "    }",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "FACT_FORECAST_YEAR",
        "columns": [
          {
            "name": "Forecast_Type",
            "dataType": "string",
            "sourceColumn": "Forecast_Type"
          },
          {
            "name": "Forecast_Name",
            "dataType": "string",
            "sourceColumn": "Forecast_Name"
          },
          {
            "name": "Order_Type",
            "dataType": "string",
            "sourceColumn": "Order_Type"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "Forecast_Quantity",
            "dataType": "int64",
            "sourceColumn": "Forecast_Quantity"
          },
          {
            "name": "Forecast_Cost_Amt",
            "dataType": "decimal",
            "sourceColumn": "Forecast_Cost_Amt"
          },
          {
            "name": "Forecast_Sales_Amt",
            "dataType": "decimal",
            "sourceColumn": "Forecast_Sales_Amt"
          },
          {
            "name": "Forecast_UPT",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "Forecast_UPT"
          },
          {
            "type": "calculated",
            "name": "Forecast_OrderCount",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "DIVIDE( FACT_FORECAST_YEAR[Forecast_Quantity], FACT_FORECAST_YEAR[Forecast_UPT] )",
            "formatString": "#,##0"
          },
          {
            "type": "calculated",
            "name": "Channel",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF(",
              "    FACT_FORECAST_YEAR[Order_Type] = \"BSO\",",
              "    \"DTS\",",
              "    IF(",
              "        FACT_FORECAST_YEAR[Order_Type] = \"DTS\",",
              "        \"DTS\",",
              "        IF( FACT_FORECAST_YEAR[Order_Type] = \"DDS\", \"DDS\", IF( FACT_FORECAST_YEAR[Order_Type] = \"DTC\", \"DTC\" ) )",
              "    )",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "FACT_FORECAST_YEAR",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [Forecast_Type]",
                "      ,[Forecast_Name]",
                "      ,[Order_Type]",
                "      ,[Date]",
                "      ,[Forecast_Quantity]",
                "      ,[Forecast_Cost_Amt]",
                "      ,[Forecast_Sales_Amt]",
                "      ,[Forecast_UPT] FROM [dbo].[V_FTD_FACT_FORECAST_YEAR]"
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ],
        "measures": [
          {
            "name": "Forecast $_Year",
            "expression": "SUM( FACT_FORECAST_YEAR[Forecast_Sales_Amt] )",
            "formatString": "\"$\"#,##0"
          },
          {
            "name": "Forecast Units_Year",
            "expression": "SUM( FACT_FORECAST_YEAR[Forecast_Quantity] )",
            "formatString": "#,##0"
          },
          {
            "name": "Forecast OrderCount_Year",
            "expression": "SUM( FACT_FORECAST_YEAR[Forecast_OrderCount] )",
            "formatString": "#,##0"
          },
          {
            "name": "Fcst AUR_Year",
            "expression": "DIVIDE( [Forecast $_Year], [Forecast Units_Year] )",
            "formatString": "\"$\"#,##0.00",
            "isHidden": true
          },
          {
            "name": "Fcst UPT_Year",
            "expression": "DIVIDE( [Forecast Units_Year], [Forecast OrderCount_Year] )",
            "formatString": "#,##0.0",
            "isHidden": true
          },
          {
            "name": "Fcst AOV_Year",
            "expression": "DIVIDE( [Forecast $_Year], [Forecast OrderCount_Year])",
            "formatString": "\"$\"#,##0.00",
            "isHidden": true
          },
          {
            "name": "Fcst AOV MTD",
            "expression": "TOTALMTD( [Fcst AOV_Year], Calendar[DATE] )",
            "formatString": "\"$\"#,##0.00"
          },
          {
            "name": "Fcst AOV YTD",
            "expression": "TOTALYTD( [Fcst AOV_Year], Calendar[DATE] )",
            "formatString": "\"$\"#,##0.00"
          },
          {
            "name": "Fcst AUR MTD",
            "expression": "TOTALMTD( [Fcst AUR_Year], Calendar[DATE] )",
            "formatString": "\"$\"#,##0.00"
          },
          {
            "name": "Fcst AUR YTD",
            "expression": "TOTALYTD( [Fcst AUR_Year], Calendar[DATE] )",
            "formatString": "\"$\"#,##0.00"
          },
          {
            "name": "Fcst UPT MTD",
            "expression": "TOTALMTD( [Fcst UPT_Year], Calendar[DATE] )",
            "formatString": "#,##0.0"
          },
          {
            "name": "Fcst UPT YTD",
            "expression": "TOTALYTD( [Fcst UPT_Year], Calendar[DATE] )",
            "formatString": "#,##0.0"
          },
          {
            "name": "Forecast $ MTD",
            "expression": "TOTALMTD( [Forecast $_Year], Calendar[DATE] )",
            "formatString": "\"$\"#,##0"
          },
          {
            "name": "Forecast $ YTD",
            "expression": "TOTALYTD( [Forecast $_Year], Calendar[DATE] )",
            "formatString": "\"$\"#,##0"
          },
          {
            "name": "% Fcst MTD",
            "expression": "IFERROR( DIVIDE( [Invoiced Amount MTD] - [Forecast $ MTD], [Forecast $ MTD] ), 1 )",
            "formatString": "#,##0.00 %"
          },
          {
            "name": "% Fcst YTD",
            "expression": "IFERROR( DIVIDE( [Invoiced Amount YTD] - [Forecast $ YTD], [Forecast $ YTD] ), 1 )",
            "formatString": "#,##0.00 %"
          }
        ]
      },
      {
        "name": "FACT_FORECAST_MONTH",
        "columns": [
          {
            "name": "Forecast_Type",
            "dataType": "string",
            "sourceColumn": "Forecast_Type"
          },
          {
            "name": "Forecast_Name",
            "dataType": "string",
            "sourceColumn": "Forecast_Name"
          },
          {
            "name": "Order_Type",
            "dataType": "string",
            "sourceColumn": "Order_Type"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date"
          },
          {
            "name": "Forecast_Quantity",
            "dataType": "int64",
            "sourceColumn": "Forecast_Quantity"
          },
          {
            "name": "Forecast_Cost_Amt",
            "dataType": "decimal",
            "sourceColumn": "Forecast_Cost_Amt"
          },
          {
            "name": "Forecast_Sales_Amt",
            "dataType": "decimal",
            "sourceColumn": "Forecast_Sales_Amt"
          },
          {
            "name": "Forecast_UPT",
            "dataType": "decimal",
            "sourceColumn": "Forecast_UPT"
          },
          {
            "type": "calculated",
            "name": "Forecast_OrderCount",
            "dataType": "double",
            "isDataTypeInferred": true,
            "expression": "DIVIDE( FACT_FORECAST_MONTH[Forecast_Quantity], FACT_FORECAST_MONTH[Forecast_UPT] )",
            "formatString": "#,##0"
          },
          {
            "type": "calculated",
            "name": "Channel",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "IF(",
              "    FACT_FORECAST_MONTH[Order_Type] = \"BSO\",",
              "    \"DTS\",",
              "    IF(",
              "        FACT_FORECAST_MONTH[Order_Type] = \"DTS\",",
              "        \"DTS\",",
              "        IF( FACT_FORECAST_MONTH[Order_Type] = \"DDS\", \"DDS\", IF( FACT_FORECAST_MONTH[Order_Type] = \"DTC\", \"DTC\" ) )",
              "    )",
              ")"
            ]
          }
        ],
        "partitions": [
          {
            "name": "FACT_FORECAST_MONTH",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT [Forecast_Type]",
                "      ,[Forecast_Name]",
                "      ,[Order_Type]",
                "      ,[Date]",
                "      ,[Forecast_Quantity]",
                "      ,[Forecast_Cost_Amt]",
                "      ,[Forecast_Sales_Amt]",
                "      ,[Forecast_UPT] FROM [dbo].[V_FTD_FACT_FORECAST_MONTH]"
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ],
        "measures": [
          {
            "name": "Forecast $_Month",
            "expression": "SUM( FACT_FORECAST_MONTH[Forecast_Sales_Amt] )",
            "formatString": "\"$\"#,##0"
          },
          {
            "name": "% Fcst",
            "expression": "IFERROR( DIVIDE( [Invoiced Amount] - [Forecast $_Month], [Forecast $_Month] ), 1 )",
            "formatString": "#,##0.0 %"
          },
          {
            "name": "Fcst UPT",
            "expression": "DIVIDE( [Forecast Units_Month], [Forecast OrderCount_Month] )",
            "formatString": "#,##0.0"
          },
          {
            "name": "Fcst AOV",
            "expression": "DIVIDE( [Forecast $_Month], [Forecast OrderCount_Month])",
            "formatString": "\"$\"#,##0.00"
          },
          {
            "name": "Fcst AUR",
            "expression": "DIVIDE( [Forecast $_Month], [Forecast Units_Month] )",
            "formatString": "\"$\"#,##0.00"
          },
          {
            "name": "Forecast Units_Month",
            "expression": "SUM( FACT_FORECAST_MONTH[Forecast_Quantity] )",
            "formatString": "#,##0"
          },
          {
            "name": "Forecast OrderCount_Month",
            "expression": "SUM( FACT_FORECAST_MONTH[Forecast_OrderCount] )",
            "formatString": "#,##0"
          }
        ]
      },
      {
        "name": "FACT_SUP_ON_TIME",
        "columns": [
          {
            "name": "Season",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Season",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Agent",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Agent",
            "sourceProviderType": "VarChar",
            "displayFolder": "Dimension Inbound"
          },
          {
            "name": "Division",
            "dataType": "string",
            "sourceColumn": "Division",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Original Entered Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Original Entered Date",
            "formatString": "Short Date",
            "sourceProviderType": "Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Original Ship Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Original Ship Date",
            "formatString": "Short Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "Ship Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Ship Date",
            "formatString": "Short Date",
            "sourceProviderType": "Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Original Shipment Number",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Original Shipment Number",
            "sourceProviderType": "Integer",
            "summarizeBy": "none"
          },
          {
            "name": "Shipment BOL#",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Shipment BOL#",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Container BOL",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Container BOL",
            "sourceProviderType": "VarChar",
            "displayFolder": "Supplier On Time"
          },
          {
            "name": "Container ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Container ID",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Shipment Arrival Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Shipment Arrival Date",
            "formatString": "Short Date",
            "sourceProviderType": "Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "New ETA Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "New ETA Date",
            "formatString": "Short Date",
            "sourceProviderType": "Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Original Due Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Original Due Date",
            "formatString": "Short Date",
            "sourceProviderType": "Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Due Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Due Date",
            "formatString": "Short Date",
            "sourceProviderType": "Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Port of Exit",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Port of Exit",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Entry Port",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Entry Port",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Stage",
            "dataType": "string",
            "sourceColumn": "Stage",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Ship to Location Code",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Ship to Location Code",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Shipment Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Shipment Type",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Shipper",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Shipper",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Sup On Time",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Sup On Time",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Mode",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Mode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DivSeason",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "DivSeason",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Carrier On Time",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Carrier On Time",
            "sourceProviderType": "VarChar",
            "displayFolder": "Key Measures Inbound"
          },
          {
            "name": "Receiving On Time",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Receiving On Time",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Ship Terms",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Ship Terms",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "WIP Units",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "WIP Units",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Total Units In Transit",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Total Units In Transit",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Cancel Units",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Cancel Units",
            "formatString": "0",
            "sourceProviderType": "Integer",
            "displayFolder": "Fact Inbound"
          },
          {
            "name": "WIP Cost Extended",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "WIP Cost Extended",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "WIP Total Cost Extended",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "WIP Total Cost Extended",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Received Units",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Received Units",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PO Cost Extended",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "PO Cost Extended",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "PO Total Cost Extended",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "PO Total Cost Extended",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Vessel",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Vessel",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Actual In Gate DC",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Actual In Gate DC",
            "formatString": "Short Date",
            "sourceProviderType": "Date",
            "displayFolder": "Dimension Inbound",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Container Turn (Port To Receive)",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Container Turn (Port To Receive)",
            "formatString": "0",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Container Turn Time (In Gate To Rcv)",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Container Turn Time (In Gate To Rcv)",
            "sourceProviderType": "Integer"
          },
          {
            "name": "As Of",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "As Of",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "name": "Factory",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Factory"
          },
          {
            "type": "calculated",
            "name": "Is most recent",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " ",
              "var thisProdnum = FACT_SUP_ON_TIME[Production No.]",
              "var mostRecentDate = CALCULATE(MAX('FACT_SUP_ON_TIME'[As Of]),ALL('FACT_SUP_ON_TIME'),FACT_SUP_ON_TIME[Production No.]= thisProdnum)",
              "return",
              "IF('FACT_SUP_ON_TIME'[As Of] =  mostRecentDate,\"yes\",\"no\")"
            ]
          },
          {
            "type": "calculated",
            "name": "IWD Varinace Days",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "IF(",
              "    ( FACT_SUP_ON_TIME[Due Date] > FACT_SUP_ON_TIME[Original Due Date] ),",
              "    ( FACT_SUP_ON_TIME[Due Date] - FACT_SUP_ON_TIME[Original Due Date] ),",
              "    0",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Variance Days Carrier",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "IF(",
              "    (( FACT_SUP_ON_TIME[New ETA Date] ) > ( FACT_SUP_ON_TIME[Shipment Arrival Date] + 2 ) ),",
              "    ( ( FACT_SUP_ON_TIME[New ETA Date] ) - ( FACT_SUP_ON_TIME[Shipment Arrival Date] + 2 ) ),",
              "    0",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Variance Days Factory",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "IF(",
              "    FACT_SUP_ON_TIME[Ship Date] > FACT_SUP_ON_TIME[Original Ship Date],",
              "    ( FACT_SUP_ON_TIME[Ship Date] - FACT_SUP_ON_TIME[Original Ship Date] ),",
              "    0",
              ")"
            ]
          },
          {
            "type": "calculated",
            "name": "Due Week Start Date",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "FACT_SUP_ON_TIME[Due Date] - WEEKDAY( FACT_SUP_ON_TIME[Due Date], 1 ) + 1"
          },
          {
            "type": "calculated",
            "name": "Due Year",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "YEAR( FACT_SUP_ON_TIME[Due Date] )"
          },
          {
            "name": "Delivery Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Delivery Date"
          },
          {
            "type": "calculated",
            "name": "Delivery Week Start Date",
            "dataType": "dateTime",
            "isDataTypeInferred": true,
            "expression": "FACT_SUP_ON_TIME[Delivery Date] - WEEKDAY( FACT_SUP_ON_TIME[Delivery Date], 1 ) + 1"
          },
          {
            "type": "calculated",
            "name": "Delivery Year",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "YEAR( FACT_SUP_ON_TIME[Delivery Date] )"
          },
          {
            "name": "Country Of Origin",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Country Of Origin"
          },
          {
            "name": "Production No.",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Production No.",
            "summarizeBy": "none"
          },
          {
            "name": "Requested IWD",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Requested IWD"
          },
          {
            "name": "SKU Type",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "SKU Type"
          },
          {
            "type": "calculated",
            "name": "Days Early/ Late",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              "DATEDIFF(FACT_SUP_ON_TIME[Delivery Date], FACT_SUP_ON_TIME[Requested IWD], DAY)",
              ""
            ],
            "formatString": "dd"
          },
          {
            "type": "calculated",
            "name": "Early/Late",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF( FACT_SUP_ON_TIME[Days Early/ Late] >= 0, \"Early\", \"Late\" )"
          },
          {
            "name": "Empty Date",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "Empty Date"
          },
          {
            "type": "calculated",
            "name": "Intran late By Delivery Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF( FACT_SUP_ON_TIME[Stage] <> \"RCVD\" && FACT_SUP_ON_TIME[Delivery Date] < TODAY( ), \"Y\", \"N\" )"
          },
          {
            "name": "FEU",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "FEU",
            "formatString": "0.0000000000"
          },
          {
            "type": "calculated",
            "name": "FEU * Units",
            "dataType": "double",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "FACT_SUP_ON_TIME[FEU] * ( FACT_SUP_ON_TIME[Received Units] + FACT_SUP_ON_TIME[WIP Units] )"
          },
          {
            "type": "calculated",
            "name": "Intran late By Ship Date",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "IF( FACT_SUP_ON_TIME[Stage] <> \"RCVD\" && FACT_SUP_ON_TIME[Ship Date] < TODAY( ), \"Y\", \"N\" )"
          },
          {
            "name": "CARTONS",
            "dataType": "int64",
            "sourceColumn": "CARTONS"
          }
        ],
        "partitions": [
          {
            "name": "FACT_SUP_ON_TIME",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT [Season]",
                "      ,[Agent]",
                "      ,[Division]",
                "      ,[Production No.]",
                "      ,[Original Entered Date]",
                "      ,[Original Ship Date]",
                "      ,[Ship Date]",
                "      ,[Original Shipment Number]",
                "      ,[Shipment BOL#]",
                "      ,[Container BOL]",
                "      ,[Container ID]",
                "      ,[Shipment Arrival Date]",
                "      ,[New ETA Date]",
                "      ,[Original Due Date]",
                "      ,[Due Date]",
                "      ,[Port of Exit]",
                "      ,[Entry Port]",
                "      ,[Stage]",
                "      ,[Ship to Location Code]",
                "      ,[Shipment Type]",
                "      ,[Shipper]",
                "      ,[Sup On Time]",
                "      ,[Mode]",
                "      ,[DivSeason]",
                "      ,[Carrier On Time]",
                "      ,[Receiving On Time]",
                "      ,[Ship Terms]",
                "      ,[WIP Units]",
                "      ,[Total Units In Transit]",
                "      ,[Cancel Units]",
                "      ,[WIP Cost Extended]",
                "      ,[WIP Total Cost Extended]",
                "      ,[Received Units]",
                "      ,[PO Cost Extended]",
                "      ,[PO Total Cost Extended]",
                "      ,[Vessel]",
                "      ,[Actual In Gate DC]",
                "      ,[Container Turn (Port To Receive)]",
                "      ,[Container Turn Time (In Gate To Rcv)]",
                "      ,[As Of]",
                "      ,[Factory]",
                "      ,[Country Of Origin]",
                "      ,[Requested IWD]",
                "      ,[SKU Type]",
                "      ,[Delivery Date]",
                "      ,[Empty Date]",
                "      ,[FEU]",
                "      ,[CARTONS] ",
                "FROM [BI_LTAP].[dbo].[V_FACT_SUP_ON_TIME]",
                "WHERE [Division] IN ('S')",
                "AND [Ship Date] >= '2025-01-01';"
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select[Season]",
                  "      ,[Agent]",
                  "      ,[Division]",
                  "      ,[Production No]",
                  "      ,[Original Entered Date]",
                  "      ,[Original Ship Date]",
                  "      ,[Ship Date]",
                  "      ,[Original Shipment Number]",
                  "      ,[Shipment BOL#]",
                  "      ,[Container BOL]",
                  "      ,[Container ID]",
                  "      ,[Shipment Arrival Date]",
                  "      ,[New ETA Date]",
                  "      ,[Original Due Date]",
                  "      ,[Due Date]",
                  "      ,[Port of Exit]",
                  "      ,[Entry Port]",
                  "      ,[Stage]",
                  "      ,[Ship to Location Code]",
                  "      ,[Shipment Type]",
                  "      ,[Shipper]",
                  "      ,[Sup On Time]",
                  "      ,[Mode]",
                  "      ,[DivSeason]",
                  "      ,[Carrier On Time]",
                  "      ,[Receiving On Time]",
                  "      ,[Ship Terms]",
                  "      ,[WIP Units]",
                  "      ,[Total Units In Transit]",
                  "      ,[Cancel Units]",
                  "      ,[WIP Cost Extended]",
                  "      ,[WIP Total Cost Extended]",
                  "      , 0 as [Received Units]",
                  "      ,0 as [PO Cost Extended]",
                  "      ,0 as [PO Total Cost Extended]",
                  "      ,'' as [Vessel]",
                  "      , '' as [Actual In Gate DC]",
                  "      ,'' as [Container Turn (Port To Receive)]",
                  "      , '' as [Container Turn Time (In Gate To Rcv)]",
                  "\t  ,[As Of]",
                  "      ,[Factory]",
                  "from [dbo].[FACT_ON_TIME_WIP]",
                  "UNION ALL",
                  "SELECT [Season]",
                  "      ,[Agent]",
                  "      ,[Division]",
                  "      ,[Production No.]",
                  "      ,[Original Entered Date]",
                  "      ,[Original Ship Date]",
                  "      ,[Ship Date]",
                  "      ,[Original Shipment Number]",
                  "      ,[Shipment BOL#]",
                  "      ,[Container BOL]",
                  "      ,[Container ID]",
                  "      ,[Shipment Arrival Date]",
                  "      ,[New ETA Date]",
                  "      ,[Original Due Date]",
                  "      ,[Due Date]",
                  "      ,[Port of Exit]",
                  "      ,[Entry Port]",
                  "      ,[Stage]",
                  "      ,[Ship to Location Code]",
                  "      ,[Shipment Type]",
                  "      ,[Shipper]",
                  "      ,[Sup On Time]",
                  "      ,[Mode]",
                  "      ,[DivSeason]",
                  "      ,[Carrier On Time]",
                  "      ,[Receiving On Time]",
                  "      ,[Ship Terms]",
                  "      , 0 as [WIP Units]",
                  "      , 0 as [Total Units In Transit]",
                  "      , 0 as [Cancel Units]",
                  "      , 0 as [WIP Cost Extended]",
                  "      , 0 as [WIP Total Cost Extended]",
                  "      ,  [Received Units]",
                  "      ,[PO Cost Extended]",
                  "      , [PO Total Cost Extended]",
                  "      ,[Vessel]",
                  "      , [Actual In Gate DC]",
                  "      ,[Container Turn (Port To Receive)]",
                  "      , [Container Turn Time (In Gate To Rcv)]",
                  "\t  ,[As Of]",
                  "      ,[Factory]",
                  "FROM [dbo].[FACT_ON_TIME_RCV]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "WIP Units On Time As Of By Factory",
            "expression": [
              " ",
              "CALCULATE(SUM('FACT_SUP_ON_TIME'[WIP Units]),",
              "\t'FACT_SUP_ON_TIME'[Sup On Time] =  \"ON TIME\",",
              "LASTDATE('FACT_SUP_ON_TIME'[As Of])",
              ")"
            ],
            "formatString": "0",
            "isHidden": true,
            "displayFolder": "Factory On Time"
          },
          {
            "name": "WIP Units Late As Of By Factory",
            "expression": [
              " ",
              "CALCULATE(",
              "\tSUM('FACT_SUP_ON_TIME'[WIP Units]),",
              "\t'FACT_SUP_ON_TIME'[Sup On Time]=\"LATE\",LASTDATE('FACT_SUP_ON_TIME'[As Of])",
              ")"
            ],
            "formatString": "0",
            "isHidden": true,
            "displayFolder": "Factory On Time"
          },
          {
            "name": "RCVD Units Shipped",
            "expression": [
              " ",
              "CALCULATE(",
              "\tSUM('FACT_SUP_ON_TIME'[Received Units]),",
              "\t'FACT_SUP_ON_TIME'[Is most recent] = \"yes\",LASTDATE('FACT_SUP_ON_TIME'[As Of])",
              ")+0"
            ],
            "formatString": "0",
            "isHidden": true,
            "displayFolder": "Factory On Time"
          },
          {
            "name": "RCVD Units On Time As Of By Factory",
            "expression": [
              " ",
              "CALCULATE(",
              "\tSUM('FACT_SUP_ON_TIME'[Received Units]),",
              "\t'FACT_SUP_ON_TIME'[Sup On Time]=\"ON TIME\",LASTDATE('FACT_SUP_ON_TIME'[As Of])",
              ")"
            ],
            "formatString": "0",
            "isHidden": true,
            "displayFolder": "Factory On Time"
          },
          {
            "name": "RCVD Units Late As Of By Factory",
            "expression": [
              " ",
              "CALCULATE(",
              "\tSUM('FACT_SUP_ON_TIME'[Received Units]),",
              "\t'FACT_SUP_ON_TIME'[Sup On Time]=\"LATE\",LASTDATE('FACT_SUP_ON_TIME'[As Of])",
              ")"
            ],
            "formatString": "0",
            "isHidden": true,
            "displayFolder": "Factory On Time"
          },
          {
            "name": "On Time Units By Factory",
            "expression": " [RCVD Units On Time As Of By Factory]+[WIP Units On Time As Of By Factory]",
            "formatString": "0",
            "isHidden": true,
            "displayFolder": "Factory On Time"
          },
          {
            "name": "Late Units By Factory",
            "expression": " [RCVD Units Late As Of By Factory]+[WIP Units Late As Of By Factory]",
            "formatString": "0",
            "isHidden": true,
            "displayFolder": "Factory On Time"
          },
          {
            "name": "Factory On Time %",
            "expression": [
              "VAR FonT =",
              "    CALCULATE(",
              "        DIVIDE(",
              "            [WIP Units On Time As Of By Factory] + [RCVD Units On Time As Of By Factory],",
              "            [WIP Units On Time As Of By Factory] + [RCVD Units On Time As Of By Factory] + [WIP Units Late As Of By Factory]",
              "                + [RCVD Units Late As Of By Factory],",
              "            0.00001",
              "        ),",
              "        FILTER( FACT_SUP_ON_TIME, FACT_SUP_ON_TIME[Mode] = \"YTD SHPD\" )",
              "    )",
              "VAR FonTT =",
              "    CALCULATE(",
              "        IF(",
              "            ( [WIP Units Late As Of By Factory] + [RCVD Units Late As Of By Factory] ) > 0",
              "                && ( [WIP Units On Time As Of By Factory] + [RCVD Units On Time As Of By Factory] ) = 0,",
              "            0.001,",
              "            FonT",
              "        ),",
              "        FILTER( FACT_SUP_ON_TIME, FACT_SUP_ON_TIME[Mode] = \"YTD SHPD\" )",
              "    )",
              "RETURN",
              "    FonTT"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Factory"
          },
          {
            "name": "RCVD Units On Time As Of By Carrier",
            "expression": [
              "CALCULATE(",
              "    SUM( FACT_SUP_ON_TIME[Received Units] ),",
              "    FACT_SUP_ON_TIME[Carrier On Time] IN { \"ON TIME\" },",
              "    USERELATIONSHIP( Calendar[DATE], FACT_SUP_ON_TIME[Due Date] ),",
              "    LASTDATE( FACT_SUP_ON_TIME[As Of] ),",
              "    FACT_SUP_ON_TIME[Ship Terms] <> \"DDP\",",
              "    FACT_SUP_ON_TIME[Shipment Type] = \"AW\" || FACT_SUP_ON_TIME[Shipment Type] = \"MLB\",",
              "    FACT_SUP_ON_TIME[Stage] = \"RCVD\",",
              "    FACT_SUP_ON_TIME[Mode] = \"YTD SHPD\"",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "RCVD Units Late As Of By Carrier",
            "expression": [
              "CALCULATE(",
              "    SUM( FACT_SUP_ON_TIME[Received Units] ),",
              "    FACT_SUP_ON_TIME[Carrier On Time] IN { \"LATE\" },",
              "    USERELATIONSHIP( Calendar[DATE], FACT_SUP_ON_TIME[Due Date] ),",
              "    LASTDATE( FACT_SUP_ON_TIME[As Of] ),",
              "    FACT_SUP_ON_TIME[Ship Terms] <> \"DDP\",",
              "    FACT_SUP_ON_TIME[Shipment Type] = \"AW\" || FACT_SUP_ON_TIME[Shipment Type] = \"MLB\",",
              "    FACT_SUP_ON_TIME[Stage] = \"RCVD\",",
              "    FACT_SUP_ON_TIME[Mode] = \"YTD SHPD\"",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "Carrier On Time %",
            "expression": [
              "VAR COnTime = CALCULATE(DIVIDE([Shipment On Time],[Shipment On Time]+[Shipment Late],0))",
              "RETURN IF(ISBLANK(COnTime) && ([Shipment On Time]+[Shipment Late])>0,0.001,COnTime)",
              "",
              "",
              "//VAR COnTime =",
              "//    CALCULATE(",
              "//        DIVIDE(",
              "//            [RCVD Units On Time As Of By Carrier],",
              "//            [RCVD Units On Time As Of By Carrier] + [RCVD Units Late As Of By Carrier],",
              "//            0",
              "//        )",
              "//    )",
              "//RETURN",
              "//    CALCULATE(",
              "//        IF(",
              "//            ISBLANK( COnTime ) && ( [RCVD Units On Time As Of By Carrier] + [RCVD Units Late As Of By Carrier] ) > 0,",
              "//            0.001,",
              "//            COnTime",
              "//        )",
              "//    )"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "Factory On Time % YTD",
            "expression": [
              "",
              "    CALCULATE ( ",
              "        [Factory On Time %], ",
              "        DATESYTD ( 'Calendar'[Date] ) ",
              "    )",
              "",
              "//CALCULATE([Factory On Time %],",
              "//FILTER('Calendar', 'Calendar'[Date] >= DATE(YEAR(TODAY()), 01, 01)),",
              "// FILTER('Calendar', 'Calendar'[Date] < TODAY()))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Factory"
          },
          {
            "name": "Carrier On Time % YTD",
            "expression": [
              "",
              "    CALCULATE ( ",
              "        [Carrier On Time %], ",
              "        DATESYTD ( 'Calendar'[Date] ) ",
              "    )",
              "",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "Factory On Time % MTD",
            "expression": [
              "",
              "    CALCULATE ( ",
              "        [Factory On Time %], ",
              "        DATESMTD( ( 'Calendar'[Date] ) ",
              "    ) ",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Factory"
          },
          {
            "name": "Carrier On Time % MTD",
            "expression": [
              "",
              "    CALCULATE ( ",
              "        [Carrier On Time %] , ",
              "        DATESMTD( ( 'Calendar'[Date] ) ",
              "    ) ",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "Carrier On Time % PM",
            "expression": [
              "",
              "    CALCULATE ( ",
              "        [Carrier On Time %] , ",
              "        PREVIOUSMONTH( 'Calendar'[Date] ) ",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "Factory On Time % PM",
            "expression": [
              "",
              "    CALCULATE ( ",
              "        [Factory On Time %], ",
              "        PREVIOUSMONTH ( 'Calendar'[Date] ) ",
              "    )",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Factory"
          },
          {
            "name": "RCVD Units",
            "expression": [
              "CALCULATE(",
              "    SUM( FACT_SUP_ON_TIME[Received Units] ),",
              "    FACT_SUP_ON_TIME[Is most recent] IN { \"yes\" },",
              "    USERELATIONSHIP( Calendar[DATE], FACT_SUP_ON_TIME[Due Date] ),",
              "    LASTDATE( FACT_SUP_ON_TIME[As Of] ),",
              "    FACT_SUP_ON_TIME[Ship Terms] <> \"DDP\",",
              "    FACT_SUP_ON_TIME[Shipment Type] = \"AW\" || FACT_SUP_ON_TIME[Shipment Type] = \"MLB\",",
              "    FACT_SUP_ON_TIME[Stage] = \"RCVD\",",
              "    FACT_SUP_ON_TIME[Mode] = \"YTD SHPD\"",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "RCVD Units On Time",
            "expression": [
              "CALCULATE(",
              "    SUM( FACT_SUP_ON_TIME[Received Units] ),",
              "    FACT_SUP_ON_TIME[Receiving On Time] IN { \"ON TIME\" },",
              "    USERELATIONSHIP( Calendar[DATE], FACT_SUP_ON_TIME[Due Date] ),",
              "    LASTDATE( FACT_SUP_ON_TIME[As Of] ),",
              "    FACT_SUP_ON_TIME[Ship Terms] <> \"DDP\",",
              "    FACT_SUP_ON_TIME[Shipment Type] = \"AW\" || FACT_SUP_ON_TIME[Shipment Type] = \"MLB\",",
              "    FACT_SUP_ON_TIME[Stage] = \"RCVD\",",
              "    FACT_SUP_ON_TIME[Mode] = \"YTD SHPD\"",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "Receiving On Time %",
            "expression": [
              "VAR RonT = CALCULATE( DIVIDE( [RCVD Units On Time], [RCVD Units], 0 ) )",
              "VAR RonTT = CALCULATE( IF( ( [RCVD Units] ) > 0 && ( [RCVD Units On Time] ) = 0, 0.001, RonT ) )",
              "RETURN",
              "    RonTT"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "Receiving On Time % YTD",
            "expression": [
              "",
              "    CALCULATE ( ",
              "        [Receiving On Time %], ",
              "        DATESYTD ( 'Calendar'[Date] ) ",
              "    )",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "Receiving On Time % MTD",
            "expression": [
              "",
              "    CALCULATE ( ",
              "        [Receiving On Time %], ",
              "        DATESMTD( ( 'Calendar'[Date] ) ",
              "    ) ",
              ")"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "Receiving  On Time % PM",
            "expression": "CALCULATE( [Receiving On Time %], PREVIOUSMONTH( Calendar[DATE] ) )",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "Average Days Late Carrier",
            "expression": [
              "CALCULATE(",
              "    AVERAGE( FACT_SUP_ON_TIME[Variance Days Carrier] ),",
              "    FACT_SUP_ON_TIME[Carrier On Time] IN { \"LATE\" },",
              "    USERELATIONSHIP( Calendar[DATE], FACT_SUP_ON_TIME[Due Date] ),",
              "    FACT_SUP_ON_TIME[Received Units] > 0,",
              "    FACT_SUP_ON_TIME[Ship Terms] <> \"DDP\",",
              "    FACT_SUP_ON_TIME[Shipment Type] = \"AW\" || FACT_SUP_ON_TIME[Shipment Type] = \"MLB\",",
              "    FACT_SUP_ON_TIME[Stage] = \"RCVD\",",
              "    FACT_SUP_ON_TIME[Mode] = \"YTD SHPD\"",
              ")"
            ],
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "Average Days Late Factory",
            "expression": [
              "CALCULATE(",
              "    AVERAGE( FACT_SUP_ON_TIME[Variance Days Factory] ),",
              "    FACT_SUP_ON_TIME[Mode] = \"YTD SHPD\",",
              "    FACT_SUP_ON_TIME[Sup On Time] = \"LATE\"",
              ")"
            ],
            "displayFolder": "Measures\\Inbound\\Factory"
          },
          {
            "name": "Variance Days IWD",
            "expression": [
              "CALCULATE(",
              "    AVERAGE( FACT_SUP_ON_TIME[IWD Varinace Days] ),",
              "    FACT_SUP_ON_TIME[Receiving On Time] IN { \"LATE\" },",
              "    USERELATIONSHIP( Calendar[DATE], FACT_SUP_ON_TIME[Due Date] ),",
              "    FACT_SUP_ON_TIME[Received Units] > 0,",
              "    FACT_SUP_ON_TIME[Ship Terms] <> \"DDP\",",
              "    FACT_SUP_ON_TIME[Shipment Type] = \"AW\" || FACT_SUP_ON_TIME[Shipment Type] = \"MLB\",",
              "    FACT_SUP_ON_TIME[Stage] = \"RCVD\",",
              "    FACT_SUP_ON_TIME[Mode] = \"YTD SHPD\"",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "Carrier On Time %LY",
            "expression": "CALCULATE(([Carrier On Time %]),SAMEPERIODLASTYEAR('Calendar'[Date]))",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "Receiving On Time %LY",
            "expression": "CALCULATE( [Receiving On Time %], SAMEPERIODLASTYEAR( Calendar[Date] ) )",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "Receiving On Time %YTD LY",
            "expression": "CALCULATE( [Receiving On Time % YTD], SAMEPERIODLASTYEAR( Calendar[DATE] ) )",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "Carrier On Time %YTD LY",
            "expression": "CALCULATE( [Carrier On Time % YTD], SAMEPERIODLASTYEAR( Calendar[Date] ) )",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "Factory On Time %LY",
            "expression": "CALCULATE( [Factory On Time %], SAMEPERIODLASTYEAR( Calendar[Date] ) )",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Factory"
          },
          {
            "name": "Factory On Time %YTD LY",
            "expression": "CALCULATE( [Factory On Time % YTD], SAMEPERIODLASTYEAR( Calendar[Date] ) )",
            "formatString": "0.00%;-0.00%;0.00%",
            "displayFolder": "Measures\\Inbound\\Factory"
          },
          {
            "name": "RCVD Units Late",
            "expression": [
              "CALCULATE(",
              "    SUM( FACT_SUP_ON_TIME[Received Units] ),",
              "    FACT_SUP_ON_TIME[Receiving On Time] IN { \"LATE\" },",
              "    USERELATIONSHIP( Calendar[DATE], FACT_SUP_ON_TIME[Due Date] ),",
              "    LASTDATE( FACT_SUP_ON_TIME[As Of] ),",
              "    FACT_SUP_ON_TIME[Ship Terms] <> \"DDP\",",
              "    FACT_SUP_ON_TIME[Shipment Type] = \"AW\" || FACT_SUP_ON_TIME[Shipment Type] = \"MLB\",",
              "    FACT_SUP_ON_TIME[Stage] = \"RCVD\",",
              "    FACT_SUP_ON_TIME[Mode] = \"YTD SHPD\"",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "Total RCVD Units By Carrier",
            "expression": "[RCVD Units Late As Of By Carrier] + [RCVD Units On Time As Of By Carrier]",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "Shipment On Time",
            "expression": [
              "CALCULATE(",
              "    DISTINCTCOUNT( FACT_SUP_ON_TIME[Original Shipment Number] ),",
              "    FACT_SUP_ON_TIME[Carrier On Time] IN { \"ON TIME\" },",
              "    USERELATIONSHIP( Calendar[DATE], FACT_SUP_ON_TIME[Due Date] ),",
              "    LASTDATE( FACT_SUP_ON_TIME[As Of] )",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "Shipment Late",
            "expression": [
              "CALCULATE(",
              "    DISTINCTCOUNT( FACT_SUP_ON_TIME[Original Shipment Number] ),",
              "    FACT_SUP_ON_TIME[Carrier On Time] IN { \"LATE\" },",
              "    USERELATIONSHIP( Calendar[DATE], FACT_SUP_ON_TIME[Due Date] ),",
              "    LASTDATE( FACT_SUP_ON_TIME[As Of] )",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Carrier"
          },
          {
            "name": "Units",
            "expression": "CALCULATE( SUM( FACT_SUP_ON_TIME[WIP Units] ) + SUM( FACT_SUP_ON_TIME[Received Units] ) )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "Container Count",
            "expression": [
              "//CALCULATE(",
              "//    DISTINCTCOUNT( FACT_SUP_ON_TIME[Container ID] ),",
              "//    FILTER(",
              "//        FACT_SUP_ON_TIME,",
              "//        FACT_SUP_ON_TIME[Division]",
              "//            = CALCULATE(",
              "//                MIN( FACT_SUP_ON_TIME[Division] ),",
              "//                ALLEXCEPT(",
              "//                    FACT_SUP_ON_TIME,",
              "//                    FACT_SUP_ON_TIME[Container ID]",
              "//                )",
              "//            )",
              "//    ),",
              "//    FACT_SUP_ON_TIME[Container ID] <> \"\"",
              "//)",
              "//CALCULATE(",
              "//    DISTINCTCOUNT( FACT_SUP_ON_TIME[Container ID] ),",
              "//    FILTER(",
              "//        ADDCOLUMNS(",
              "//            FACT_SUP_ON_TIME,",
              "//            \"MinStage\", CALCULATE( MIN( FACT_SUP_ON_TIME[Stage] ), ALLEXCEPT( FACT_SUP_ON_TIME, FACT_SUP_ON_TIME[Container ID] ) ),",
              "//            \"MinDivision\",",
              "//                CALCULATE( MIN( FACT_SUP_ON_TIME[Division] ), ALLEXCEPT( FACT_SUP_ON_TIME, FACT_SUP_ON_TIME[Container ID] ) )",
              "//        ),",
              "//        FACT_SUP_ON_TIME[Stage] = [MinStage] && FACT_SUP_ON_TIME[Division] = [MinDivision] && FACT_SUP_ON_TIME[Container ID] <> \"\"",
              "//    )",
              "//)",
              "",
              "",
              "CALCULATE(",
              "    DISTINCTCOUNT( FACT_SUP_ON_TIME[Container ID] ),",
              "    FILTER(",
              "        ADDCOLUMNS(",
              "            FACT_SUP_ON_TIME,",
              "            \"MinStage\", CALCULATE( MIN( FACT_SUP_ON_TIME[Stage] ), ALLEXCEPT( FACT_SUP_ON_TIME, FACT_SUP_ON_TIME[Container ID] ) ),",
              "            \"MinDivision\",",
              "                CALCULATE( MIN( FACT_SUP_ON_TIME[Division] ), ALLEXCEPT( FACT_SUP_ON_TIME, FACT_SUP_ON_TIME[Container ID] ) )",
              "        ),",
              "        FACT_SUP_ON_TIME[Stage] = [MinStage] && FACT_SUP_ON_TIME[Division] = [MinDivision] && FACT_SUP_ON_TIME[Container ID] <> \"\"",
              "    )",
              ")",
              "    + CALCULATE( SUM( FACT_SUP_ON_TIME[FEU * Units] ), FACT_SUP_ON_TIME[Stage] = \"PO\" )"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Containers"
          },
          {
            "name": "Units & Containers",
            "expression": [
              "SWITCH(",
              "    VALUES( FACTS[FACTS] ),",
              "    \"# Units\", [Units],",
              "    \"# Container\", [Container Count]",
              ")"
            ],
            "formatString": "#,##0"
          },
          {
            "name": "Units Late",
            "expression": "CALCULATE( [Units], FACT_SUP_ON_TIME[Early/Late] = \"Late\" )",
            "formatString": "#,##0",
            "displayFolder": "Measures\\Inbound\\Receiving"
          },
          {
            "name": "% Late",
            "expression": "DIVIDE( [Units Late], [Units] )",
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Inbound\\Factory"
          },
          {
            "name": "Capacity line",
            "expression": [
              "SWITCH(",
              "    TRUE( ),",
              "    VALUES( 'FACTS'[FACTS] ) = \"# Units\", 800000,",
              "    VALUES( 'FACTS'[FACTS] ) = \"# Container\", 0",
              ")"
            ],
            "displayFolder": "Measures\\Inbound\\Capacity"
          },
          {
            "name": "PO Containers",
            "expression": "CALCULATE( SUM( FACT_SUP_ON_TIME[FEU * Units] ), FACT_SUP_ON_TIME[Stage] = \"PO\" )",
            "displayFolder": "Measures\\Inbound\\Containers"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "select[Season]",
              "      ,[Agent]",
              "      ,[Division]",
              "      ,[Production No]",
              "      ,[Original Entered Date]",
              "      ,[Original Ship Date]",
              "      ,[Ship Date]",
              "      ,[Original Shipment Number]",
              "      ,[Shipment BOL#]",
              "      ,[Container BOL]",
              "      ,[Container ID]",
              "      ,[Shipment Arrival Date]",
              "      ,[New ETA Date]",
              "      ,[Original Due Date]",
              "      ,[Due Date]",
              "      ,[Port of Exit]",
              "      ,[Entry Port]",
              "      ,[Stage]",
              "      ,[Ship to Location Code]",
              "      ,[Shipment Type]",
              "      ,[Shipper]",
              "      ,[Sup On Time]",
              "      ,[Mode]",
              "      ,[DivSeason]",
              "      ,[Carrier On Time]",
              "      ,[Receiving On Time]",
              "      ,[Ship Terms]",
              "      ,[WIP Units]",
              "      ,[Total Units In Transit]",
              "      ,[Cancel Units]",
              "      ,[WIP Cost Extended]",
              "      ,[WIP Total Cost Extended]",
              "      , 0 as [Received Units]",
              "      ,0 as [PO Cost Extended]",
              "      ,0 as [PO Total Cost Extended]",
              "      ,'' as [Vessel]",
              "      , '' as [Actual In Gate DC]",
              "      ,'' as [Container Turn (Port To Receive)]",
              "      , '' as [Container Turn Time (In Gate To Rcv)]",
              "\t  ,[As Of]",
              "      ,[Factory]",
              "from [dbo].[FACT_ON_TIME_WIP]",
              "UNION ALL",
              "SELECT [Season]",
              "      ,[Agent]",
              "      ,[Division]",
              "      ,[Production No.]",
              "      ,[Original Entered Date]",
              "      ,[Original Ship Date]",
              "      ,[Ship Date]",
              "      ,[Original Shipment Number]",
              "      ,[Shipment BOL#]",
              "      ,[Container BOL]",
              "      ,[Container ID]",
              "      ,[Shipment Arrival Date]",
              "      ,[New ETA Date]",
              "      ,[Original Due Date]",
              "      ,[Due Date]",
              "      ,[Port of Exit]",
              "      ,[Entry Port]",
              "      ,[Stage]",
              "      ,[Ship to Location Code]",
              "      ,[Shipment Type]",
              "      ,[Shipper]",
              "      ,[Sup On Time]",
              "      ,[Mode]",
              "      ,[DivSeason]",
              "      ,[Carrier On Time]",
              "      ,[Receiving On Time]",
              "      ,[Ship Terms]",
              "      , 0 as [WIP Units]",
              "      , 0 as [Total Units In Transit]",
              "      , 0 as [Cancel Units]",
              "      , 0 as [WIP Cost Extended]",
              "      , 0 as [WIP Total Cost Extended]",
              "      ,  [Received Units]",
              "      ,[PO Cost Extended]",
              "      , [PO Total Cost Extended]",
              "      ,[Vessel]",
              "      , [Actual In Gate DC]",
              "      ,[Container Turn (Port To Receive)]",
              "      , [Container Turn Time (In Gate To Rcv)]",
              "\t  ,[As Of]",
              "      ,[Factory]",
              "FROM [dbo].[FACT_ON_TIME_RCV]"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "FACT_SUP_ON_TIME"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select[Season]",
              "      ,[Agent]",
              "      ,[Division]",
              "      ,[Production No]",
              "      ,[Original Entered Date]",
              "      ,[Original Ship Date]",
              "      ,[Ship Date]",
              "      ,[Original Shipment Number]",
              "      ,[Shipment BOL#]",
              "      ,[Container BOL]",
              "      ,[Container ID]",
              "      ,[Shipment Arrival Date]",
              "      ,[New ETA Date]",
              "      ,[Original Due Date]",
              "      ,[Due Date]",
              "      ,[Port of Exit]",
              "      ,[Entry Port]",
              "      ,[Stage]",
              "      ,[Ship to Location Code]",
              "      ,[Shipment Type]",
              "      ,[Shipper]",
              "      ,[Sup On Time]",
              "      ,[Mode]",
              "      ,[DivSeason]",
              "      ,[Carrier On Time]",
              "      ,[Receiving On Time]",
              "      ,[Ship Terms]",
              "      ,[WIP Units]",
              "      ,[Total Units In Transit]",
              "      ,[Cancel Units]",
              "      ,[WIP Cost Extended]",
              "      ,[WIP Total Cost Extended]",
              "      , 0 as [Received Units]",
              "      ,0 as [PO Cost Extended]",
              "      ,0 as [PO Total Cost Extended]",
              "      ,'' as [Vessel]",
              "      , '' as [Actual In Gate DC]",
              "      ,'' as [Container Turn (Port To Receive)]",
              "      , '' as [Container Turn Time (In Gate To Rcv)]",
              "\t  ,[As Of]",
              "      ,[Factory]",
              "from [dbo].[FACT_ON_TIME_WIP]",
              "UNION ALL",
              "SELECT [Season]",
              "      ,[Agent]",
              "      ,[Division]",
              "      ,[Production No.]",
              "      ,[Original Entered Date]",
              "      ,[Original Ship Date]",
              "      ,[Ship Date]",
              "      ,[Original Shipment Number]",
              "      ,[Shipment BOL#]",
              "      ,[Container BOL]",
              "      ,[Container ID]",
              "      ,[Shipment Arrival Date]",
              "      ,[New ETA Date]",
              "      ,[Original Due Date]",
              "      ,[Due Date]",
              "      ,[Port of Exit]",
              "      ,[Entry Port]",
              "      ,[Stage]",
              "      ,[Ship to Location Code]",
              "      ,[Shipment Type]",
              "      ,[Shipper]",
              "      ,[Sup On Time]",
              "      ,[Mode]",
              "      ,[DivSeason]",
              "      ,[Carrier On Time]",
              "      ,[Receiving On Time]",
              "      ,[Ship Terms]",
              "      , 0 as [WIP Units]",
              "      , 0 as [Total Units In Transit]",
              "      , 0 as [Cancel Units]",
              "      , 0 as [WIP Cost Extended]",
              "      , 0 as [WIP Total Cost Extended]",
              "      ,  [Received Units]",
              "      ,[PO Cost Extended]",
              "      , [PO Total Cost Extended]",
              "      ,[Vessel]",
              "      , [Actual In Gate DC]",
              "      ,[Container Turn (Port To Receive)]",
              "      , [Container Turn Time (In Gate To Rcv)]",
              "\t  ,[As Of]",
              "      ,[Factory]",
              "FROM [dbo].[FACT_ON_TIME_RCV]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "FACTS",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "FACTS",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[FACTS]",
            "sortByColumn": "Selection"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Selection",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Selection]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Format String",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Format String]"
          }
        ],
        "partitions": [
          {
            "name": "FACTS",
            "mode": "import",
            "source": {
              "type": "calculated",
              "expression": [
                "DATATABLE(",
                "    \"FACTS\", STRING,",
                "    \"Selection\", INTEGER,",
                "    \"Format String\", STRING,",
                "    {",
                "        { \"# Units\", 1, \"#,##0\" },",
                "        { \"$ Dollars\", 2, \"$ #,##0\" },",
                "        { \"* Order Count\", 3, \"#,##0\" },",
                "        { \"* Carton Count\", 4, \"#,##0\" },",
                "        { \"# Container\", 5, \"#,##0\" },",
                "        { \"* Wave Count\", 6, \"#,##0\" }",
                "    }",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_STATE",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Country",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Country]",
            "displayFolder": "Dimension State"
          },
          {
            "type": "calculatedTableColumn",
            "name": "State",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "description": "State",
            "sourceColumn": "[State]",
            "displayFolder": "Dimension State"
          },
          {
            "type": "calculatedTableColumn",
            "name": "State Name",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[State Name]",
            "displayFolder": "Dimension State"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Region",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Region]",
            "displayFolder": "Dimension State"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "DATATABLE(",
                "    \"Country\", STRING,",
                "    \"State\", STRING,",
                "    \"State Name\", STRING,",
                "    \"Region\", STRING,",
                "    {",
                "        { \"US\", \"AK\", \"ALASKA\", \"North West\" },",
                "        { \"US\", \"AL\", \"ALABAMA\", \"South Central\" },",
                "        { \"US\", \"AR\", \"ARKANSAS\", \"South Central\" },",
                "        { \"US\", \"AZ\", \"ARIZONA\", \"South West\" },",
                "        { \"US\", \"CA\", \"CALIFORNIA\", \"South West\" },",
                "        { \"US\", \"CO\", \"COLORADO\", \"South West\" },",
                "        { \"US\", \"CT\", \"CONNECTICUT\", \"North East\" },",
                "        { \"US\", \"DE\", \"DELAWARE\", \"South East\" },",
                "        { \"US\", \"FL\", \"FLORIDA\", \"South East\" },",
                "        { \"US\", \"GA\", \"GEORGIA\", \"South East\" },",
                "        { \"US\", \"HI\", \"HAWAI\", \"North West\" },",
                "        { \"US\", \"IA\", \"IOWA\", \"North Central\" },",
                "        { \"US\", \"ID\", \"IDAHO\", \"North West\" },",
                "        { \"US\", \"IL\", \"ILLINOIS\", \"North Central\" },",
                "        { \"US\", \"IN\", \"INDIANA\", \"North Central\" },",
                "        { \"US\", \"KS\", \"KANSAS\", \"North Central\" },",
                "        { \"US\", \"KY\", \"KENTUCKY\", \"South Central\" },",
                "        { \"US\", \"LA\", \"LOUISIANA\", \"South Central\" },",
                "        { \"US\", \"MA\", \"MASSACHUSETTS\", \"North East\" },",
                "        { \"US\", \"MD\", \"MARYLAND\", \"South East\" },",
                "        { \"US\", \"ME\", \"MAINE\", \"North East\" },",
                "        { \"US\", \"MI\", \"MICHIGAN\", \"North Central\" },",
                "        { \"US\", \"MN\", \"MINNESOTA\", \"North Central\" },",
                "        { \"US\", \"MO\", \"MISSOURI\", \"North Central\" },",
                "        { \"US\", \"MS\", \"MISSISSIPPI\", \"South Central\" },",
                "        { \"US\", \"MT\", \"MONTANA\", \"North West\" },",
                "        { \"US\", \"NC\", \"NORTH CAROLINA\", \"South East\" },",
                "        { \"US\", \"ND\", \"NORTH DAKOTA\", \"North Central\" },",
                "        { \"US\", \"NE\", \"NEBRASKA\", \"North Central\" },",
                "        { \"US\", \"NH\", \"NEW HAMPSHIRE\", \"North East\" },",
                "        { \"US\", \"NJ\", \"NEW JERSEY\", \"North East\" },",
                "        { \"US\", \"NM\", \"NEW MEXICO\", \"South West\" },",
                "        { \"US\", \"NV\", \"NEVADA\", \"South West\" },",
                "        { \"US\", \"NY\", \"NEW YORK\", \"North East\" },",
                "        { \"US\", \"OH\", \"OHIO\", \"North Central\" },",
                "        { \"US\", \"OK\", \"OKLAHOMA\", \"South Central\" },",
                "        { \"US\", \"OR\", \"OREGAN\", \"North West\" },",
                "        { \"US\", \"PA\", \"PENNSYLVANIA\", \"North East\" },",
                "        { \"US\", \"RI\", \"RHODE ISLAND\", \"North East\" },",
                "        { \"US\", \"SC\", \"SOUTH CAROLINA\", \"South East\" },",
                "        { \"US\", \"SD\", \"SOUTH DAKOTA\", \"North Central\" },",
                "        { \"US\", \"TN\", \"TENNESSEE\", \"South Central\" },",
                "        { \"US\", \"TX\", \"TEXAS\", \"South Central\" },",
                "        { \"US\", \"UT\", \"UTAH\", \"South West\" },",
                "        { \"US\", \"VA\", \"VIRGINIA\", \"South East\" },",
                "        { \"US\", \"VT\", \"VERMONT\", \"North East\" },",
                "        { \"US\", \"WA\", \"WASHINGTON\", \"North West\" },",
                "        { \"US\", \"WI\", \"WISCONSIN\", \"North Central\" },",
                "        { \"US\", \"WV\", \"WEST VIRGINIA\", \"South East\" },",
                "        { \"US\", \"WY\", \"WYOMING\", \"North West\" }",
                "    }",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "Open & Shipped Metric",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Metric",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Metric]",
            "sortByColumn": "Selection"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Selection",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Selection]"
          }
        ],
        "partitions": [
          {
            "name": "Open & Shipped Metric",
            "mode": "import",
            "source": {
              "type": "calculated",
              "expression": [
                "DATATABLE(",
                "    \"Metric\", STRING,",
                "    \"Selection\", INTEGER,",
                "    {",
                "        { \"Shipped\", 1 },",
                "        { \"Demand\", 2 },",
                "        { \"Total\", 3 }",
                "    }",
                ")"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Open & Ship Units",
            "description": "Open Or Ship Units (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Units],",
              "    \"Demand\", [Open + Pick Units],",
              "    \"Total\", [Invoiced Units] + [Open + Pick Units]",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Units"
          },
          {
            "name": "Open & Ship Amount",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Amount],",
              "    \"Demand\", [Open + Pick Amount],",
              "    \"Total\", [Invoiced Amount] + [Open + Pick Amount]",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Amount"
          },
          {
            "name": "Open & Ship Order Count",
            "description": "Open Or Ship Order Count (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Order Count],",
              "    \"Demand\", [Open + Pick Order Count],",
              "    \"Total\", [Invoiced Order Count] + [Open + Pick Order Count]",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Order Count"
          },
          {
            "name": "Open & Ship Units MTD",
            "description": "Open Or Ship Units MTD (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Units MTD],",
              "    \"Demand\", [Open + Pick Units MTD],",
              "    \"Total\", [Invoiced Units MTD] + [Open + Pick Units MTD]",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Units"
          },
          {
            "name": "Open & Ship Units YTD",
            "description": "Open Or Ship Units YTD (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Units YTD],",
              "    \"Demand\", [Open + Pick Units YTD],",
              "    \"Total\", [Invoiced Units YTD] + [Open + Pick Units YTD]",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Units"
          },
          {
            "name": "Open & Ship Amount MTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Amount MTD],",
              "    \"Demand\", [Open + Pick Amount MTD],",
              "    \"Total\", [Invoiced Amount MTD] + [Open + Pick Amount MTD]",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Amount"
          },
          {
            "name": "Open & Ship Amount YTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Amount YTD],",
              "    \"Demand\", [Open + Pick Amount YTD],",
              "    \"Total\", [Invoiced Amount YTD] + [Open + Pick Amount YTD]",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Amount"
          },
          {
            "name": "Open & Ship Order Count MTD",
            "description": "Open Or Ship Order Count MTD (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Order Count MTD],",
              "    \"Demand\", [Open + Pick Order Count MTD],",
              "    \"Total\",",
              "        [Invoiced Order Count MTD] + [Open + Pick Order Count MTD]",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Order Count"
          },
          {
            "name": "Open & Ship Order Count YTD",
            "description": "Open Or Ship Order Count YTD (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Order Count YTD],",
              "    \"Demand\", [Open + Pick Order Count YTD],",
              "    \"Total\",",
              "        [Invoiced Order Count YTD] + [Open + Pick Order Count YTD]",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Order Count"
          },
          {
            "name": "Open & Ship UPT",
            "description": "Open Or Ship UPT (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [UPT],",
              "    \"Demand\", [Open + Pick UPT]",
              ")"
            ],
            "formatString": "#,##0.0",
            "displayFolder": "Measures\\UPT"
          },
          {
            "name": "Open & Ship UPT MTD",
            "description": "Open Or Ship UPT MTD (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [UPT MTD],",
              "    \"Demand\", [Open + Pick UPT MTD]",
              ")"
            ],
            "formatString": "#,##0.0",
            "displayFolder": "Measures\\UPT"
          },
          {
            "name": "Open & Ship UPT YTD",
            "description": "Open Or Ship UPT YTD (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [UPT YTD],",
              "    \"Demand\", [Open + Pick UPT YTD]",
              ")"
            ],
            "formatString": "#,##0.0",
            "displayFolder": "Measures\\UPT"
          },
          {
            "name": "Open & Ship AUR",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [AUR],",
              "    \"Demand\", [Open + Pick AUR]",
              ")"
            ],
            "formatString": "\"$\"#,##0.0",
            "displayFolder": "Measures\\AUR"
          },
          {
            "name": "Open & Ship AUR MTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [AUR MTD],",
              "    \"Demand\", [Open + Pick AUR MTD]",
              ")"
            ],
            "formatString": "\"$\"#,##0.0",
            "displayFolder": "Measures\\AUR"
          },
          {
            "name": "Open & Ship AUR YTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [AUR YTD],",
              "    \"Demand\", [Open + Pick AUR YTD]",
              ")"
            ],
            "formatString": "\"$\"#,##0.0",
            "displayFolder": "Measures\\AUR"
          },
          {
            "name": "Open & Ship AOV",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [AOV],",
              "    \"Demand\", [Open + Pick AOV]",
              ")"
            ],
            "formatString": "\"$\"#,##0.0",
            "displayFolder": "Measures\\AOV"
          },
          {
            "name": "Open & Ship AOV MTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [AOV MTD],",
              "    \"Demand\", [Open + Pick AOV MTD]",
              ")"
            ],
            "formatString": "\"$\"#,##0.0",
            "displayFolder": "Measures\\AOV"
          },
          {
            "name": "Open & Ship AOV YTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [AOV YTD],",
              "    \"Demand\", [Open + Pick AOV YTD]",
              ")"
            ],
            "formatString": "\"$\"#,##0.0",
            "displayFolder": "Measures\\AOV"
          },
          {
            "name": "Open & Ship School Count",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced School Count],",
              "    \"Demand\", [Open + Pick School Count],",
              "    \"Total\", [Unique School Count]",
              ")"
            ],
            "formatString": "#,##0"
          },
          {
            "name": "Open & Ship SKU Count",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced SKU Count],",
              "    \"Demand\", [Open + Pick SKU Count],",
              "    \"Total\", [Invoiced SKU Count] + [Open + Pick SKU Count]",
              ")"
            ],
            "formatString": "#,##0"
          },
          {
            "name": "Open & Ship Order Lines",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Order Lines],",
              "    \"Demand\", [Open + Pick Order Lines],",
              "    \"Total\", [Invoiced Order Lines] + [Open + Pick Order Lines]",
              ")"
            ],
            "formatString": "#,##0"
          },
          {
            "name": "Open & Ship Avg Units Per Order",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Avg Units/Order],",
              "    \"Demand\", [Open + Pick Avg Units/Order],",
              "    \"Total\",",
              "        DIVIDE(",
              "            ( [Invoiced Units] + [Open + Pick Units] ),",
              "            ( [Invoiced Order Count] + [Open + Pick Order Count] )",
              "        )",
              ")"
            ],
            "formatString": "#,##0"
          },
          {
            "name": "Open & Ship Customer Count",
            "description": "Open Or Ship Customer Count (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Customer Count],",
              "    \"Demand\", [Open + Pick Customer Count],",
              "    \"Total\", [Unique Customer Count]",
              ")"
            ],
            "formatString": "#,##0"
          },
          {
            "name": "Open & Ship Gross Amount",
            "description": "Open Or Ship Gross Amount (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Gross Amount],",
              "    \"Demand\", [Open + Pick Gross Amount],",
              "    \"Total\", [Invoiced Gross Amount] + [Open + Pick Gross Amount]",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Gross Amount"
          },
          {
            "name": "Open & Ship Gross Amount MTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Gross Amount MTD],",
              "    \"Demand\", [Open + Pick Gross Amount MTD],",
              "    \"Total\", [Invoiced Gross Amount MTD] + [Open + Pick Gross Amount MTD]",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Gross Amount"
          },
          {
            "name": "Open & Ship Gross Amount YTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Gross Amount YTD],",
              "    \"Demand\", [Open + Pick Gross Amount YTD],",
              "    \"Total\", [Invoiced Gross Amount YTD] + [Open + Pick Gross Amount YTD]",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Gross Amount"
          },
          {
            "name": "Open & Ship Avg Lines/Order",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Avg Lines/Order],",
              "    \"Demand\", [Open + Pick Avg Lines/Order],",
              "    \"Total\",",
              "        DIVIDE(",
              "            ( [Invoiced Order Lines] + [Open + Pick Order Lines] ),",
              "            ( [Invoiced Order Count] + [Open + Pick Order Count] )",
              "        )",
              ")"
            ]
          },
          {
            "name": "Open & Ship Avg Units/Line",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Avg Units/Line],",
              "    \"Demand\", [Open + Pick Avg Units/Line],",
              "    \"Total\",",
              "        DIVIDE(",
              "            ( [Invoiced Units] + [Open + Pick Units] ),",
              "            ( [Invoiced Order Lines] + [Open + Pick Order Lines] )",
              "        )",
              ")"
            ]
          },
          {
            "name": "Unique School Count",
            "expression": [
              "VAR Combined_Schools =",
              "    SUMMARIZE(",
              "        UNION(",
              "            SELECTCOLUMNS( FACT_SALES_OP, \"School Code\", FACT_SALES_OP[School Code] ),",
              "            SELECTCOLUMNS( FACT_SHIPPED, \"School Code\", FACT_SHIPPED[School_Code] )",
              "        ),",
              "        [School Code]",
              "    )",
              "RETURN",
              "    COUNTROWS( Combined_Schools )"
            ],
            "formatString": "#,##0"
          },
          {
            "name": "Unique Customer Count",
            "expression": [
              "VAR Combined_Customers =",
              "    SUMMARIZE(",
              "        UNION(",
              "            SELECTCOLUMNS( FILTER( FACT_SALES_OP, FACT_SALES_OP[Order Type] = \"DDS\" ), \"Customer ID\", FACT_SALES_OP[Customer] ),",
              "            SELECTCOLUMNS( FILTER( FACT_SHIPPED, FACT_SHIPPED[Order Type] = \"DDS\" ), \"Customer ID\", FACT_SHIPPED[Customer] )",
              "        ),",
              "        [Customer ID]",
              "    )",
              "RETURN",
              "    COUNTROWS( Combined_Customers )"
            ]
          },
          {
            "name": "Open & Ship Gross Amount LY",
            "description": "Open Or Ship Gross Amount LY (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Gross Amount LY],",
              "    \"Demand\", 0 ,",
              "    \"Total\", [Invoiced Gross Amount LY] + 0",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Gross Amount\\LY"
          },
          {
            "name": "Open & Ship Gross Amount LY MTD",
            "description": "Open Or Ship Gross Amount MTD (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Gross Amount LY MTD],",
              "    \"Demand\", 0 ,",
              "    \"Total\", [Invoiced Gross Amount LY MTD] + 0",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Gross Amount\\LY"
          },
          {
            "name": "Open & Ship Gross Amount LY YTD",
            "description": "Open Or Ship Gross Amount YTD (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Gross Amount LY YTD],",
              "    \"Demand\", 0 ,",
              "    \"Total\", [Invoiced Gross Amount LY YTD] + 0",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Gross Amount\\LY"
          },
          {
            "name": "Open & Ship Gross Amount Variance MTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Gross Amount Variance MTD],",
              "    \"Demand\", 0 ,",
              "    \"Total\", [Invoiced Gross Amount Variance MTD] + 0",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Gross Amount\\LY"
          },
          {
            "name": "Open & Ship Gross Amount Variance YTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Gross Amount Variance YTD],",
              "    \"Demand\", 0 ,",
              "    \"Total\", [Invoiced Gross Amount Variance YTD] + 0",
              ")"
            ],
            "formatString": "\"$\"#,##0",
            "displayFolder": "Measures\\Gross Amount\\LY"
          },
          {
            "name": "Open & Ship % LY Gross Amount",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [% LY Invoiced Gross Amount],",
              "    \"Demand\", 0 ,",
              "    \"Total\", [% LY Invoiced Gross Amount] + 0",
              ")"
            ],
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Gross Amount\\LY"
          },
          {
            "name": "Open & Ship % LY Gross Amount MTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [% LY Invoiced Gross Amount MTD],",
              "    \"Demand\", 0 ,",
              "    \"Total\", [% LY Invoiced Gross Amount MTD] + 0",
              ")"
            ],
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Gross Amount\\LY"
          },
          {
            "name": "Open & Ship % LY Gross Amount YTD",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [% LY Invoiced Gross Amount YTD],",
              "    \"Demand\", 0 ,",
              "    \"Total\", [% LY Invoiced Gross Amount YTD] + 0",
              ")"
            ],
            "formatString": "#,##0.00 %",
            "displayFolder": "Measures\\Gross Amount\\LY"
          },
          {
            "name": "Open & Ship Units LY",
            "description": "Open Or Ship Units Last Year (As Per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Units LY],",
              "    \"Demand\", 0,",
              "    \"Total\", [Invoiced Units LY] + 0",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Units\\LY"
          },
          {
            "name": "Open & Ship Units LY MTD",
            "description": "Open Or Ship Units MTD (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Units LY MTD],",
              "    \"Demand\", 0,",
              "    \"Total\", [Invoiced Units LY MTD] + 0",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Units\\LY"
          },
          {
            "name": "Open & Ship Units LY YTD",
            "description": "Open Or Ship Units YTD (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Units LY YTD],",
              "    \"Demand\", 0,",
              "    \"Total\", [Invoiced Units LY YTD] + 0",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Units\\LY"
          },
          {
            "name": "Open & Ship Units Variance MTD",
            "description": "Open Or Ship Units Variance (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Units Variance MTD],",
              "    \"Demand\", 0,",
              "    \"Total\", [Invoiced Units Variance MTD] + 0",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Units\\LY"
          },
          {
            "name": "Open & Ship Units Variance YTD",
            "description": "Open Or Ship Units Variance $ YTD (As per Metric Selection)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Invoiced Units Variance YTD],",
              "    \"Demand\", 0,",
              "    \"Total\", [Invoiced Units Variance YTD] + 0",
              ")"
            ],
            "formatString": "#,##0",
            "displayFolder": "Measures\\Units\\LY"
          },
          {
            "name": "Open & Ship Avg Days to Ship (Submitted & Ship)",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Open & Shipped Metric'[Metric] ),",
              "    \"Shipped\", [Avg Days to Ship (Submitted & Ship)],",
              "    \"Demand\", 0,",
              "    \"Total\", [Avg Days to Ship (Submitted & Ship)] + 0",
              ")"
            ]
          }
        ]
      },
      {
        "name": "FTD_FACT_INVENTORY",
        "columns": [
          {
            "name": "CUST_STYLE",
            "dataType": "string",
            "sourceColumn": "CUST_STYLE"
          },
          {
            "name": "CUST_COLOR",
            "dataType": "string",
            "sourceColumn": "CUST_COLOR"
          },
          {
            "name": "CUST_SIZE",
            "dataType": "string",
            "sourceColumn": "CUST_SIZE"
          },
          {
            "name": "LOCATION",
            "dataType": "string",
            "sourceColumn": "LOCATION"
          },
          {
            "name": "QOH",
            "dataType": "decimal",
            "sourceColumn": "QOH"
          },
          {
            "name": "QOH_RETAIL_VALUE",
            "dataType": "decimal",
            "sourceColumn": "QOH_RETAIL_VALUE"
          }
        ],
        "partitions": [
          {
            "name": "FTD_FACT_INVENTORY",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT",
                "    [CUST_STYLE],",
                "    [CUST_COLOR],",
                "    [CUST_SIZE],",
                "    [LOCATION],",
                "    [QOH],",
                "    [QOH_RETAIL_VALUE]",
                "    FROM",
                "    [dbo].[V_FTD_FACT_INVENTORY]"
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ]
      },
      {
        "name": "DIM_SHIPPER",
        "columns": [
          {
            "name": "shipper",
            "dataType": "string",
            "sourceColumn": "shipper"
          },
          {
            "name": "ship_name",
            "dataType": "string",
            "sourceColumn": "ship_name"
          },
          {
            "name": "city",
            "dataType": "string",
            "sourceColumn": "city"
          },
          {
            "name": "state",
            "dataType": "string",
            "sourceColumn": "state"
          },
          {
            "name": "country",
            "dataType": "string",
            "sourceColumn": "country"
          },
          {
            "name": "Shipper Group",
            "dataType": "string",
            "sourceColumn": "Shipper Group"
          }
        ],
        "partitions": [
          {
            "name": "DIM_SHIPPER",
            "mode": "import",
            "source": {
              "type": "query",
              "query": [
                "SELECT",
                "    [shipper],",
                "    [ship_name],",
                "    [city],",
                "    [state],",
                "    [country],",
                "    [Shipper Group]",
                "FROM",
                "    [dbo].[V_DIM_SHIPPER]"
              ],
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ]
      },
      {
        "name": "DIM_DECORATION_TYPE",
        "columns": [
          {
            "name": "Decoration Code",
            "dataType": "int64",
            "sourceColumn": "Decoration Code"
          },
          {
            "name": "Decoration Type",
            "dataType": "string",
            "sourceColumn": "Decoration Type"
          },
          {
            "name": "SNo",
            "dataType": "int64",
            "sourceColumn": "SNo"
          }
        ],
        "partitions": [
          {
            "name": "DIM_DECORATION_TYPE",
            "mode": "import",
            "source": {
              "type": "query",
              "query": "SELECT * FROM [dbo].[V_FTD_DIM_DECORATION_TYPE]",
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ]
      },
      {
        "name": "Data Dictionary",
        "columns": [
          {
            "name": "Table",
            "dataType": "string",
            "sourceColumn": "Table",
            "sourceProviderType": "VarChar",
            "displayFolder": "Data Dictionary"
          },
          {
            "name": "Field Type",
            "dataType": "string",
            "sourceColumn": "Field Type",
            "sourceProviderType": "VarChar",
            "displayFolder": "Data Dictionary"
          },
          {
            "name": "Field",
            "dataType": "string",
            "sourceColumn": "Field",
            "sourceProviderType": "VarChar",
            "displayFolder": "Data Dictionary"
          },
          {
            "name": "Description",
            "dataType": "string",
            "sourceColumn": "Description",
            "sourceProviderType": "VarChar",
            "displayFolder": "Data Dictionary"
          },
          {
            "name": "Display Folder",
            "dataType": "string",
            "sourceColumn": "Display Folder",
            "sourceProviderType": "VarChar",
            "displayFolder": "Data Dictionary"
          },
          {
            "name": "TableRowCount",
            "dataType": "int64",
            "sourceColumn": "TableRowCount",
            "sourceProviderType": "Integer",
            "displayFolder": "Data Dictionary"
          },
          {
            "name": "Measure Formula",
            "dataType": "string",
            "sourceColumn": "Measure Formula",
            "sourceProviderType": "VarChar",
            "displayFolder": "Data Dictionary"
          },
          {
            "name": "Perspective",
            "dataType": "string",
            "sourceColumn": "Perspective",
            "sourceProviderType": "VarChar",
            "displayFolder": "Data Dictionary"
          }
        ],
        "partitions": [
          {
            "name": "Data Dictionary",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "WITH",
                "Dimensions AS",
                "(",
                "    SELECT *",
                "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=FTD_DataModel;',",
                "    'SELECT * FROM $SYSTEM.MDSCHEMA_DIMENSIONS')",
                "),",
                "Hierarchies AS",
                "(",
                "    SELECT *",
                "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=FTD_DataModel;',",
                "    'SELECT * FROM $SYSTEM.MDSCHEMA_HIERARCHIES')",
                "),",
                "Measures AS",
                "(",
                "    SELECT *",
                "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=FTD_DataModel;',",
                "    'SELECT * FROM $SYSTEM.MDSCHEMA_MEASURES')",
                ")",
                "--The first query collects all of the tables, their descriptions, row counts and perspectives.",
                "SELECT",
                "    CAST([DIMENSION_NAME] AS VARCHAR) AS 'Table'",
                "    ,'Table' AS 'Field Type'",
                "    ,CAST([DIMENSION_NAME] AS VARCHAR(255)) AS 'Field'",
                "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
                "    ,'' AS 'Display Folder'",
                "    ,CAST([DIMENSION_CARDINALITY] AS INT) AS 'TableRowCount'",
                "    ,'***Not a measure***' AS 'Measure Formula'",
                "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
                "FROM Dimensions",
                "WHERE CAST([DIMENSION_NAME] AS VARCHAR) NOT IN('Measures','Data Dictionary') --here you can remove superfluous tables that need not be defined.",
                "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
                "  ",
                "UNION ALL",
                "  ",
                "--The second query collects all of the visible fields, their descriptions, display folders, and perspectives.",
                "  ",
                "SELECT",
                "    SUBSTRING(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR),2,LEN(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR))-2) AS 'Table'",
                "    ,'Attribute' AS 'Field Type'",
                "    ,CAST([HIERARCHY_NAME] as VARCHAR(255)) AS 'Field'",
                "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
                "    ,CAST([HIERARCHY_DISPLAY_FOLDER] AS VARCHAR(255)) AS 'Display Folder'",
                "    ,NULL AS 'RowCount'",
                "    ,'***Not a measure***' AS 'Measure Formula'",
                "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
                "FROM Hierarchies",
                "WHERE CAST([HIERARCHY_IS_VISIBLE] AS VARCHAR) = 1 --Filter to only show visible fields",
                "AND SUBSTRING(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR),2,LEN(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR))-2) NOT IN('Data Dictionary','Measures')",
                "AND CAST([INSTANCE_SELECTION] AS VARCHAR) IS NOT NULL",
                "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
                "  ",
                "UNION ALL",
                "  ",
                "--The final query collects all of the visible measures, their descriptions, display folders, DAX Expressions, and perspectives.",
                "  ",
                "SELECT",
                "    CAST([MEASUREGROUP_NAME] AS VARCHAR) AS 'Table'",
                "    ,'Measure' AS 'Field Type'",
                "    ,CAST([MEASURE_NAME] AS VARCHAR(255)) AS 'Field'",
                "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
                "    ,CAST([MEASURE_DISPLAY_FOLDER] AS VARCHAR(255)) AS 'Display Folder' --This shows the BIDS Helper Display Folder.",
                "    ,NULL AS 'RowCount'",
                "    ,CAST([EXPRESSION] AS VARCHAR(255)) AS 'Measure Formula' --This shows the DAX expression used to calculate the measure.",
                "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
                "FROM Measures",
                "WHERE CAST([MEASURE_IS_VISIBLE] AS VARCHAR) = 1",
                "AND CAST([EXPRESSION] AS VARCHAR) IS NOT NULL",
                "AND CAST([MEASUREGROUP_NAME] AS VARCHAR) NOT IN('Data Dictionary')",
                "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
                " ",
                "ORDER BY 1,2 DESC,3"
              ],
              "dataSource": "SqlServer localhost 1"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH",
                  "Dimensions AS",
                  "(",
                  "    SELECT *",
                  "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=BlueCherryBIStarSchemaDataModel;',",
                  "    'SELECT * FROM $SYSTEM.MDSCHEMA_DIMENSIONS')",
                  "),",
                  "Hierarchies AS",
                  "(",
                  "    SELECT *",
                  "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=BlueCherryBIStarSchemaDataModel;',",
                  "    'SELECT * FROM $SYSTEM.MDSCHEMA_HIERARCHIES')",
                  "),",
                  "Measures AS",
                  "(",
                  "    SELECT *",
                  "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=BlueCherryBIStarSchemaDataModel;',",
                  "    'SELECT * FROM $SYSTEM.MDSCHEMA_MEASURES')",
                  ")",
                  "--The first query collects all of the tables, their descriptions, row counts and perspectives.",
                  "SELECT",
                  "    CAST([DIMENSION_NAME] AS VARCHAR) AS 'Table'",
                  "    ,'Table' AS 'Field Type'",
                  "    ,CAST([DIMENSION_NAME] AS VARCHAR(255)) AS 'Field'",
                  "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
                  "    ,'' AS 'Display Folder'",
                  "    ,CAST([DIMENSION_CARDINALITY] AS INT) AS 'TableRowCount'",
                  "    ,'***Not a measure***' AS 'Measure Formula'",
                  "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
                  "FROM Dimensions",
                  "WHERE CAST([DIMENSION_NAME] AS VARCHAR) NOT IN('Measures','Data Dictionary') --here you can remove superfluous tables that need not be defined.",
                  "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
                  "  ",
                  "UNION ALL",
                  "  ",
                  "--The second query collects all of the visible fields, their descriptions, display folders, and perspectives.",
                  "  ",
                  "SELECT",
                  "    SUBSTRING(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR),2,LEN(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR))-2) AS 'Table'",
                  "    ,'Attribute' AS 'Field Type'",
                  "    ,CAST([HIERARCHY_NAME] as VARCHAR(255)) AS 'Field'",
                  "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
                  "    ,CAST([HIERARCHY_DISPLAY_FOLDER] AS VARCHAR) AS 'Display Folder'",
                  "    ,NULL AS 'RowCount'",
                  "    ,'***Not a measure***' AS 'Measure Formula'",
                  "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
                  "FROM Hierarchies",
                  "WHERE CAST([HIERARCHY_IS_VISIBLE] AS VARCHAR) = 1 --Filter to only show visible fields",
                  "AND SUBSTRING(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR),2,LEN(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR))-2) NOT IN('Data Dictionary','Measures')",
                  "AND CAST([INSTANCE_SELECTION] AS VARCHAR) IS NOT NULL",
                  "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
                  "  ",
                  "UNION ALL",
                  "  ",
                  "--The final query collects all of the visible measures, their descriptions, display folders, DAX Expressions, and perspectives.",
                  "  ",
                  "SELECT",
                  "    CAST([MEASUREGROUP_NAME] AS VARCHAR) AS 'Table'",
                  "    ,'Measure' AS 'Field Type'",
                  "    ,CAST([MEASURE_NAME] AS VARCHAR(255)) AS 'Field'",
                  "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
                  "    ,CAST([MEASURE_DISPLAY_FOLDER] AS VARCHAR) AS 'Display Folder' --This shows the BIDS Helper Display Folder.",
                  "    ,NULL AS 'RowCount'",
                  "    ,CAST([EXPRESSION] AS VARCHAR(255)) AS 'Measure Formula' --This shows the DAX expression used to calculate the measure.",
                  "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
                  "FROM Measures",
                  "WHERE CAST([MEASURE_IS_VISIBLE] AS VARCHAR) = 1",
                  "AND CAST([EXPRESSION] AS VARCHAR) IS NOT NULL",
                  "AND CAST([MEASUREGROUP_NAME] AS VARCHAR) NOT IN('Data Dictionary')",
                  "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
                  " ",
                  "ORDER BY 1,2 DESC,3</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "WITH",
              "Dimensions AS",
              "(",
              "    SELECT *",
              "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=BlueCherryBIStarSchemaDataModel;',",
              "    'SELECT * FROM $SYSTEM.MDSCHEMA_DIMENSIONS')",
              "),",
              "Hierarchies AS",
              "(",
              "    SELECT *",
              "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=BlueCherryBIStarSchemaDataModel;',",
              "    'SELECT * FROM $SYSTEM.MDSCHEMA_HIERARCHIES')",
              "),",
              "Measures AS",
              "(",
              "    SELECT *",
              "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=BlueCherryBIStarSchemaDataModel;',",
              "    'SELECT * FROM $SYSTEM.MDSCHEMA_MEASURES')",
              ")",
              "--The first query collects all of the tables, their descriptions, row counts and perspectives.",
              "SELECT",
              "    CAST([DIMENSION_NAME] AS VARCHAR) AS 'Table'",
              "    ,'Table' AS 'Field Type'",
              "    ,CAST([DIMENSION_NAME] AS VARCHAR(255)) AS 'Field'",
              "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
              "    ,'' AS 'Display Folder'",
              "    ,CAST([DIMENSION_CARDINALITY] AS INT) AS 'TableRowCount'",
              "    ,'***Not a measure***' AS 'Measure Formula'",
              "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
              "FROM Dimensions",
              "WHERE CAST([DIMENSION_NAME] AS VARCHAR) NOT IN('Measures','Data Dictionary') --here you can remove superfluous tables that need not be defined.",
              "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
              "  ",
              "UNION ALL",
              "  ",
              "--The second query collects all of the visible fields, their descriptions, display folders, and perspectives.",
              "  ",
              "SELECT",
              "    SUBSTRING(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR),2,LEN(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR))-2) AS 'Table'",
              "    ,'Attribute' AS 'Field Type'",
              "    ,CAST([HIERARCHY_NAME] as VARCHAR(255)) AS 'Field'",
              "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
              "    ,CAST([HIERARCHY_DISPLAY_FOLDER] AS VARCHAR) AS 'Display Folder'",
              "    ,NULL AS 'RowCount'",
              "    ,'***Not a measure***' AS 'Measure Formula'",
              "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
              "FROM Hierarchies",
              "WHERE CAST([HIERARCHY_IS_VISIBLE] AS VARCHAR) = 1 --Filter to only show visible fields",
              "AND SUBSTRING(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR),2,LEN(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR))-2) NOT IN('Data Dictionary','Measures')",
              "AND CAST([INSTANCE_SELECTION] AS VARCHAR) IS NOT NULL",
              "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
              "  ",
              "UNION ALL",
              "  ",
              "--The final query collects all of the visible measures, their descriptions, display folders, DAX Expressions, and perspectives.",
              "  ",
              "SELECT",
              "    CAST([MEASUREGROUP_NAME] AS VARCHAR) AS 'Table'",
              "    ,'Measure' AS 'Field Type'",
              "    ,CAST([MEASURE_NAME] AS VARCHAR(255)) AS 'Field'",
              "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
              "    ,CAST([MEASURE_DISPLAY_FOLDER] AS VARCHAR) AS 'Display Folder' --This shows the BIDS Helper Display Folder.",
              "    ,NULL AS 'RowCount'",
              "    ,CAST([EXPRESSION] AS VARCHAR(255)) AS 'Measure Formula' --This shows the DAX expression used to calculate the measure.",
              "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
              "FROM Measures",
              "WHERE CAST([MEASURE_IS_VISIBLE] AS VARCHAR) = 1",
              "AND CAST([EXPRESSION] AS VARCHAR) IS NOT NULL",
              "AND CAST([MEASUREGROUP_NAME] AS VARCHAR) NOT IN('Data Dictionary')",
              "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
              " ",
              "ORDER BY 1,2 DESC,3"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Data Dictionary"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>WITH",
              "Dimensions AS",
              "(",
              "    SELECT *",
              "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=BlueCherryBIStarSchemaDataModel;',",
              "    'SELECT * FROM $SYSTEM.MDSCHEMA_DIMENSIONS')",
              "),",
              "Hierarchies AS",
              "(",
              "    SELECT *",
              "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=BlueCherryBIStarSchemaDataModel;',",
              "    'SELECT * FROM $SYSTEM.MDSCHEMA_HIERARCHIES')",
              "),",
              "Measures AS",
              "(",
              "    SELECT *",
              "    FROM OPENROWSET('MSOLAP','DATASOURCE=BCDWH02\\BCDWH02; Initial Catalog=BlueCherryBIStarSchemaDataModel;',",
              "    'SELECT * FROM $SYSTEM.MDSCHEMA_MEASURES')",
              ")",
              "--The first query collects all of the tables, their descriptions, row counts and perspectives.",
              "SELECT",
              "    CAST([DIMENSION_NAME] AS VARCHAR) AS 'Table'",
              "    ,'Table' AS 'Field Type'",
              "    ,CAST([DIMENSION_NAME] AS VARCHAR(255)) AS 'Field'",
              "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
              "    ,'' AS 'Display Folder'",
              "    ,CAST([DIMENSION_CARDINALITY] AS INT) AS 'TableRowCount'",
              "    ,'***Not a measure***' AS 'Measure Formula'",
              "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
              "FROM Dimensions",
              "WHERE CAST([DIMENSION_NAME] AS VARCHAR) NOT IN('Measures','Data Dictionary') --here you can remove superfluous tables that need not be defined.",
              "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
              "  ",
              "UNION ALL",
              "  ",
              "--The second query collects all of the visible fields, their descriptions, display folders, and perspectives.",
              "  ",
              "SELECT",
              "    SUBSTRING(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR),2,LEN(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR))-2) AS 'Table'",
              "    ,'Attribute' AS 'Field Type'",
              "    ,CAST([HIERARCHY_NAME] as VARCHAR(255)) AS 'Field'",
              "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
              "    ,CAST([HIERARCHY_DISPLAY_FOLDER] AS VARCHAR) AS 'Display Folder'",
              "    ,NULL AS 'RowCount'",
              "    ,'***Not a measure***' AS 'Measure Formula'",
              "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
              "FROM Hierarchies",
              "WHERE CAST([HIERARCHY_IS_VISIBLE] AS VARCHAR) = 1 --Filter to only show visible fields",
              "AND SUBSTRING(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR),2,LEN(CAST([DIMENSION_UNIQUE_NAME] AS VARCHAR))-2) NOT IN('Data Dictionary','Measures')",
              "AND CAST([INSTANCE_SELECTION] AS VARCHAR) IS NOT NULL",
              "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
              "  ",
              "UNION ALL",
              "  ",
              "--The final query collects all of the visible measures, their descriptions, display folders, DAX Expressions, and perspectives.",
              "  ",
              "SELECT",
              "    CAST([MEASUREGROUP_NAME] AS VARCHAR) AS 'Table'",
              "    ,'Measure' AS 'Field Type'",
              "    ,CAST([MEASURE_NAME] AS VARCHAR(255)) AS 'Field'",
              "    ,CAST([DESCRIPTION] AS VARCHAR(255)) AS 'Description'",
              "    ,CAST([MEASURE_DISPLAY_FOLDER] AS VARCHAR) AS 'Display Folder' --This shows the BIDS Helper Display Folder.",
              "    ,NULL AS 'RowCount'",
              "    ,CAST([EXPRESSION] AS VARCHAR(255)) AS 'Measure Formula' --This shows the DAX expression used to calculate the measure.",
              "    ,CAST([CUBE_NAME] AS VARCHAR) AS 'Perspective'",
              "FROM Measures",
              "WHERE CAST([MEASURE_IS_VISIBLE] AS VARCHAR) = 1",
              "AND CAST([EXPRESSION] AS VARCHAR) IS NOT NULL",
              "AND CAST([MEASUREGROUP_NAME] AS VARCHAR) NOT IN('Data Dictionary')",
              "AND CAST([CUBE_NAME] AS VARCHAR) NOT LIKE '$%'",
              " ",
              "ORDER BY 1,2 DESC,3</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "Time Intelligence Metric",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Metric",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Metric]",
            "sortByColumn": "Selection"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Selection",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Selection]"
          }
        ],
        "partitions": [
          {
            "name": "Time Intelligence Metric",
            "mode": "import",
            "source": {
              "type": "calculated",
              "expression": [
                "DATATABLE(",
                "    \"Metric\", STRING,",
                "    \"Selection\", INTEGER,",
                "    {",
                "        { \"Previous Day\", 1 },",
                "        { \"Today\", 2 },",
                "        { \"WTD\", 3 },",
                "        { \"MTD\", 4 },",
                "        { \"YTD\", 5 }",
                "    }",
                ")"
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Invoiced Amount $",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Time Intelligence Metric'[Metric] ),",
              "    \"Previous Day\", [Invoiced Amount Previous Day],",
              "    \"Today\", [Invoiced Amount Today],",
              "    \"WTD\", [Invoiced Amount WTD],",
              "    \"MTD\", [Invoiced Amount MTD],",
              "    \"YTD\", [Invoiced Amount YTD]",
              ")"
            ],
            "formatString": "\"$\"#,##0"
          },
          {
            "name": "Invoiced Gross Amount $",
            "expression": [
              "SWITCH(",
              "    SELECTEDVALUE( 'Time Intelligence Metric'[Metric] ),",
              "    \"Previous Day\", [Invoiced Gross Amount Previous Day],",
              "    \"Today\", [Invoiced Gross Amount Today],",
              "    \"WTD\", [Invoiced Gross Amount WTD Current Week],",
              "    \"MTD\", [Invoiced Gross Amount MTD],",
              "    \"YTD\", [Invoiced Gross Amount YTD]",
              ")"
            ],
            "formatString": "\"$\"#,##0"
          },
          {
            "name": "Invoiced Units #",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Time Intelligence Metric'[Metric] ),",
              "    \"Previous Day\", [Invoiced Units Previous Day],",
              "    \"Today\", [Invoiced Units Today],",
              "    \"WTD\", [Invoiced Units WTD],",
              "    \"MTD\", [Invoiced Units MTD],",
              "    \"YTD\", [Invoiced Units YTD]",
              ")"
            ],
            "formatString": "#,##0"
          },
          {
            "name": "Invoiced Order Count #",
            "expression": [
              "SWITCH(",
              "    VALUES( 'Time Intelligence Metric'[Metric] ),",
              "    \"Previous Day\", [Invoiced Order Count Previous Day],",
              "    \"Today\", [Invoiced Order Count Today],",
              "    \"WTD\", [Invoiced Order Count WTD],",
              "    \"MTD\", [Invoiced Order Count MTD],",
              "    \"YTD\", [Invoiced Order Count YTD]",
              ")"
            ],
            "formatString": "#,##0"
          }
        ]
      },
      {
        "name": "DIM_CHANNEL",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Channel",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Channel]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Channel Desc",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Channel Desc]"
          }
        ],
        "partitions": [
          {
            "name": "DIM_CHANNEL",
            "mode": "import",
            "source": {
              "type": "calculated",
              "expression": [
                "DATATABLE(",
                "    \"Channel\", STRING,",
                "    \"Channel Desc\", STRING,",
                "    {",
                "        { \"DDS\", \"Drop Ship\" },",
                "        { \"DTC\", \"Direct To Consumer\" },",
                "        { \"DTS\", \"Direct To School\" }",
                "    }",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "DIM_PO_NUM",
        "columns": [
          {
            "name": "Purchase_Order_No",
            "dataType": "string",
            "sourceColumn": "Purchase_Order_No"
          }
        ],
        "partitions": [
          {
            "name": "DIM_PO_NUM",
            "mode": "import",
            "source": {
              "type": "query",
              "query": "SELECT * FROM [dbo].[V_FTD_DIM_PO_NUM]",
              "dataSource": "BCDWH02@BI_LTAP"
            }
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "1310a342-afb6-426b-ae80-ab41b597ddb6",
        "fromTable": "FACT_SALES_OP",
        "fromColumn": "Customer",
        "toTable": "DIM_CUSTOMER_MASTER",
        "toColumn": "Customer"
      },
      {
        "name": "94b2351c-7e96-4664-8576-2fc6499fa989",
        "fromTable": "FACT_SHIPPED",
        "fromColumn": "Customer",
        "toTable": "DIM_CUSTOMER_MASTER",
        "toColumn": "Customer"
      },
      {
        "name": "6cb542ff-9e49-4737-ae90-592ec0c4365a",
        "fromTable": "FACT_SALES_OP",
        "fromColumn": "Order Type",
        "toTable": "DIM_ORD_TYPE",
        "toColumn": "Order Type"
      },
      {
        "name": "7472b73e-b649-478c-80b2-7cd6bf191d21",
        "fromTable": "FACT_SHIPPED",
        "fromColumn": "Order Type",
        "toTable": "DIM_ORD_TYPE",
        "toColumn": "Order Type"
      },
      {
        "name": "efc0ee35-8692-4596-9561-a5eb6592e61a",
        "fromTable": "FACT_SALES_OP",
        "fromColumn": "Location",
        "toTable": "DIM_LOCATION_MASTER",
        "toColumn": "Location"
      },
      {
        "name": "648b5488-f29e-4bdf-a367-a6f4f4321784",
        "fromTable": "FACT_SHIPPED",
        "fromColumn": "Location",
        "toTable": "DIM_LOCATION_MASTER",
        "toColumn": "Location"
      },
      {
        "name": "13cf7859-7820-4580-893f-1b6d1485a843",
        "fromTable": "FACT_SUP_ON_TIME",
        "fromColumn": "Ship Date",
        "toTable": "Calendar",
        "toColumn": "DATE"
      },
      {
        "name": "1bff45ad-3638-4b17-9924-359343f1db19",
        "fromTable": "FACT_SUP_ON_TIME",
        "fromColumn": "Due Date",
        "toTable": "Calendar",
        "toColumn": "DATE",
        "isActive": false
      },
      {
        "name": "de0d256f-088d-4040-bc4e-8aaaef05b669",
        "fromTable": "FACT_SALES_OP",
        "fromColumn": "Submitted Date",
        "toTable": "Calendar",
        "toColumn": "DATE"
      },
      {
        "name": "012413ef-cbf2-4ca3-9789-906b8f9a62b4",
        "fromTable": "FACT_SHIPPED",
        "fromColumn": "Ship Date",
        "toTable": "Calendar",
        "toColumn": "DATE"
      },
      {
        "name": "3b6db121-baa2-4e5e-9e57-6a24e967c31a",
        "fromTable": "FCT_FCST",
        "fromColumn": "Date",
        "toTable": "Calendar",
        "toColumn": "DATE"
      },
      {
        "name": "c838f350-8ae6-4144-bf05-181389debcfc",
        "fromTable": "FACT_FORECAST_MONTH",
        "fromColumn": "Order_Type",
        "toTable": "DIM_ORD_TYPE",
        "toColumn": "Order Type"
      },
      {
        "name": "e92d972f-692f-4b5f-8199-95b605dcd0f7",
        "fromTable": "FACT_FORECAST_YEAR",
        "fromColumn": "Order_Type",
        "toTable": "DIM_ORD_TYPE",
        "toColumn": "Order Type"
      },
      {
        "name": "40962934-e915-49c3-881c-259ad43285c8",
        "fromTable": "FACT_FORECAST_MONTH",
        "fromColumn": "Date",
        "toTable": "Calendar",
        "toColumn": "DATE"
      },
      {
        "name": "c00e4f9b-cb25-4863-931e-4d1273490a80",
        "fromTable": "FACT_FORECAST_YEAR",
        "fromColumn": "Date",
        "toTable": "Calendar",
        "toColumn": "DATE"
      },
      {
        "name": "e79abbde-ab0e-4ff1-a32b-20f110657e58",
        "fromTable": "FACT_SALES_OP",
        "fromColumn": "Shipper",
        "toTable": "DIM_SHIPPER",
        "toColumn": "shipper"
      },
      {
        "name": "12bddfcd-dcb7-4d06-a1da-c215e32c95c5",
        "fromTable": "FACT_SHIPPED",
        "fromColumn": "Shipper",
        "toTable": "DIM_SHIPPER",
        "toColumn": "shipper"
      },
      {
        "name": "d360cec3-7b79-4ae3-ac69-06197d79bece",
        "fromTable": "FACT_SHIPPED",
        "fromColumn": "School_Code",
        "toTable": "DIM_SCHOOL_MASTER",
        "toColumn": "School_Code"
      },
      {
        "name": "4b97bc88-8ae9-4672-9513-2a410a8b93b8",
        "fromTable": "FACT_SALES_OP",
        "fromColumn": "School Code",
        "toTable": "DIM_SCHOOL_MASTER",
        "toColumn": "School_Code"
      },
      {
        "name": "d3eddcf1-12d7-4711-b219-87f128ba82f2",
        "fromTable": "FACT_SHIPPED",
        "fromColumn": "Decoration_Type",
        "toTable": "DIM_DECORATION_TYPE",
        "toColumn": "Decoration Type"
      },
      {
        "name": "48e644c1-f314-4189-9a00-6ba452bfcbc8",
        "fromTable": "FACT_SALES_OP",
        "fromColumn": "Decoration_Type",
        "toTable": "DIM_DECORATION_TYPE",
        "toColumn": "Decoration Type"
      },
      {
        "name": "4416f590-ea73-4980-960d-3ddf63d968c0",
        "fromTable": "FACT_SHIPPED",
        "fromColumn": "Channel",
        "toTable": "DIM_CHANNEL",
        "toColumn": "Channel"
      },
      {
        "name": "fee1d794-e209-4974-a542-c591bc3e0eb1",
        "fromTable": "FACT_FORECAST_YEAR",
        "fromColumn": "Channel",
        "toTable": "DIM_CHANNEL",
        "toColumn": "Channel"
      },
      {
        "name": "941ec31b-aaf5-4088-a975-acbfa7241198",
        "fromTable": "FACT_FORECAST_MONTH",
        "fromColumn": "Channel",
        "toTable": "DIM_CHANNEL",
        "toColumn": "Channel"
      },
      {
        "name": "de020eb8-e4e0-47e8-b4c1-fa00af70bbed",
        "fromTable": "FACT_SALES_OP",
        "fromColumn": "Purchase Order No.",
        "toTable": "DIM_PO_NUM",
        "toColumn": "Purchase_Order_No"
      },
      {
        "name": "5cb3ac28-999c-44b1-b500-45d702232dcf",
        "fromTable": "FACT_SHIPPED",
        "fromColumn": "Purchase Order No.",
        "toTable": "DIM_PO_NUM",
        "toColumn": "Purchase_Order_No"
      }
    ],
    "perspectives": [
      {
        "name": "Sales",
        "tables": [
          {
            "name": "DIM_SCHOOL_MASTER",
            "columns": [
              {
                "name": "School_Code"
              },
              {
                "name": "School_Name"
              },
              {
                "name": "City"
              },
              {
                "name": "State"
              },
              {
                "name": "Zip_Code"
              },
              {
                "name": "Country"
              },
              {
                "name": "Region"
              }
            ]
          },
          {
            "name": "FACT_SHIPPED",
            "columns": [
              {
                "name": "Size Group"
              },
              {
                "name": "Customer"
              },
              {
                "name": "Style Code"
              },
              {
                "name": "Color Code"
              },
              {
                "name": "Weighted Average Cost"
              },
              {
                "name": "Dimen/Pack"
              },
              {
                "name": "Style Season"
              },
              {
                "name": "Season"
              },
              {
                "name": "Ship Date"
              },
              {
                "name": "Order Line Status"
              },
              {
                "name": "Order Type"
              },
              {
                "name": "Order Type Desc"
              },
              {
                "name": "Organization Code"
              },
              {
                "name": "FT SKU"
              },
              {
                "name": "Location"
              },
              {
                "name": "Color Description"
              },
              {
                "name": "Decoration Code"
              },
              {
                "name": "Invoiced Total Amount"
              },
              {
                "name": "Invoiced Total Units"
              },
              {
                "name": "Purchase Order No."
              },
              {
                "name": "Charge Price"
              },
              {
                "name": "School_Code"
              },
              {
                "name": "Decoration_Type"
              },
              {
                "name": "Extended Trx Standard Cost"
              },
              {
                "name": "School Group"
              },
              {
                "name": "Pick Date"
              },
              {
                "name": "Shipper"
              },
              {
                "name": "Submitted Date"
              },
              {
                "name": "Days to Ship (Submitted Date & Ship Date)"
              },
              {
                "name": "Days to Ship (Interface Date & Ship Date)"
              },
              {
                "name": "Days to Ship (Submitted Date & Interface Date)"
              },
              {
                "name": "Aging Days (Submitted & Today)"
              },
              {
                "name": "Aging Days Grouping"
              },
              {
                "name": "Channel"
              },
              {
                "name": "Embelishment Cost"
              },
              {
                "name": "Extended Gross Price"
              },
              {
                "name": "Size Name"
              },
              {
                "name": "Color Name"
              },
              {
                "name": "SKU"
              },
              {
                "name": "Order Classifier"
              }
            ],
            "measures": [
              {
                "name": "Invoiced Amount"
              },
              {
                "name": "Invoiced Units"
              },
              {
                "name": "Invoiced Order Count"
              },
              {
                "name": "COGS @ WAC"
              },
              {
                "name": "Gross Margin $ @ WAC"
              },
              {
                "name": "Invoiced $ (With Embelishment Charges)"
              },
              {
                "name": "Gross Margin % @ WAC"
              },
              {
                "name": "AUR"
              },
              {
                "name": "AOV"
              },
              {
                "name": "UPT"
              },
              {
                "name": "AUR MTD"
              },
              {
                "name": "AUR YTD"
              },
              {
                "name": "AOV MTD"
              },
              {
                "name": "AOV YTD"
              },
              {
                "name": "UPT MTD"
              },
              {
                "name": "UPT YTD"
              },
              {
                "name": "Invoiced Amount MTD"
              },
              {
                "name": "Invoiced Amount YTD"
              },
              {
                "name": "Invoiced Units MTD"
              },
              {
                "name": "Invoiced Units YTD"
              },
              {
                "name": "Invoiced Amount LW"
              },
              {
                "name": "Invoiced Units LW"
              },
              {
                "name": "Invoiced Order Count MTD"
              },
              {
                "name": "Invoiced Order Count YTD"
              },
              {
                "name": "Invoiced School Count"
              },
              {
                "name": "Invoiced SKU Count"
              },
              {
                "name": "Invoiced Order Lines"
              },
              {
                "name": "Invoiced Customer Count"
              },
              {
                "name": "Invoiced Amount Today"
              },
              {
                "name": "Invoiced Amount Previous Day"
              },
              {
                "name": "Invoiced Amount WTD"
              },
              {
                "name": "Invoiced Amount LW (upto Current day of week)"
              },
              {
                "name": "Invoiced Amount Previous Month"
              },
              {
                "name": "Invoiced Avg Lines/Order"
              },
              {
                "name": "Invoiced Avg Units/Line"
              },
              {
                "name": "Invoiced Avg Units/Order"
              },
              {
                "name": "Avg Days to Ship (Submitted & Interface)"
              },
              {
                "name": "Avg Days to Ship (Interface & Ship)"
              },
              {
                "name": "Avg Days to Ship (Submitted & Ship)"
              },
              {
                "name": "Invoiced Gross Amount"
              },
              {
                "name": "Invoiced Gross Amount Today"
              },
              {
                "name": "Invoiced Gross Amount WTD Current Week"
              },
              {
                "name": "Invoiced Gross Amount MTD"
              },
              {
                "name": "Invoiced Gross Amount YTD"
              },
              {
                "name": "Invoiced Gross Amount LY (LY Date)"
              },
              {
                "name": "Invoiced Gross Amount Previous Day"
              },
              {
                "name": "Invoiced Units Previous Day"
              },
              {
                "name": "Invoiced Units Today"
              },
              {
                "name": "Invoiced Units WTD"
              },
              {
                "name": "Invoiced Order Count Previous Day"
              },
              {
                "name": "Invoiced Order Count Today"
              },
              {
                "name": "Invoiced Order Count WTD"
              },
              {
                "name": "Invoiced Amount LY"
              },
              {
                "name": "Invoiced Amount LY MTD"
              },
              {
                "name": "Invoiced Amount LY YTD"
              },
              {
                "name": "% LY Invoiced Amount"
              },
              {
                "name": "% LY Invoiced Amount MTD"
              },
              {
                "name": "% LY Invoiced Amount YTD"
              },
              {
                "name": "Invoiced Gross Amount LY"
              },
              {
                "name": "Invoiced Gross Amount LY MTD"
              },
              {
                "name": "Invoiced Gross Amount LY YTD"
              },
              {
                "name": "Invoiced Units LY"
              },
              {
                "name": "Invoiced Units LY MTD"
              },
              {
                "name": "Invoiced Units LY YTD"
              },
              {
                "name": "% LY Invoiced Gross Amount"
              },
              {
                "name": "% LY Invoiced Gross Amount MTD"
              },
              {
                "name": "% LY Invoiced Gross Amount YTD"
              },
              {
                "name": "Invoiced Gross Amount Variance MTD"
              },
              {
                "name": "Invoiced Gross Amount Variance YTD"
              },
              {
                "name": "Invoiced Units Variance MTD"
              },
              {
                "name": "Invoiced Units Variance YTD"
              },
              {
                "name": "% LY Invoiced Units"
              },
              {
                "name": "% LY Invoiced Units MTD"
              },
              {
                "name": "% LY Invoiced Units YTD"
              },
              {
                "name": "Amount LY (By week of Day)"
              },
              {
                "name": "% LY Invoiced Gross Amount (LY Date)"
              },
              {
                "name": "Invoiced Gross Amount LY MTD (LY Date)"
              },
              {
                "name": "Invoiced Gross Amount LY YTD (LY Date)"
              },
              {
                "name": "% LY Invoiced Gross Amount MTD (LY Date)"
              },
              {
                "name": "% LY Invoiced Gross Amount YTD (LY Date)"
              },
              {
                "name": "Embl Cost"
              }
            ]
          },
          {
            "name": "FACT_SALES_OP",
            "columns": [
              {
                "name": "Customer"
              },
              {
                "name": "Order Status"
              },
              {
                "name": "FT SKU"
              },
              {
                "name": "Decoration code"
              },
              {
                "name": "Submitted Date"
              },
              {
                "name": "Location"
              },
              {
                "name": "Extended Gross Price"
              },
              {
                "name": "Picked Total Amount"
              },
              {
                "name": "Picked Total Units"
              },
              {
                "name": "Open Total Amount"
              },
              {
                "name": "Open Total Units"
              },
              {
                "name": "Embelishment Charges"
              },
              {
                "name": "Embelishment Cost"
              },
              {
                "name": "School Code"
              },
              {
                "name": "Extended Trx Standard Cost"
              },
              {
                "name": "Order Type"
              },
              {
                "name": "Decoration_Type"
              },
              {
                "name": "School Group"
              },
              {
                "name": "Pick Date"
              },
              {
                "name": "Purchase Order No."
              },
              {
                "name": "Shipper"
              },
              {
                "name": "AgingDays"
              },
              {
                "name": "Color Code"
              },
              {
                "name": "Color Name"
              },
              {
                "name": "Size Name"
              },
              {
                "name": "SKU"
              },
              {
                "name": "Order Classifier"
              },
              {
                "name": "AgingDays Grouping"
              }
            ],
            "measures": [
              {
                "name": "Open Amount"
              },
              {
                "name": "Picked Amount"
              },
              {
                "name": "Open Units"
              },
              {
                "name": "Picked Units"
              },
              {
                "name": "Open Sales $ (With Embelishment Charges)"
              },
              {
                "name": "Picked Sales $ (With Embelishment Charges)"
              },
              {
                "name": "Open Order Count"
              },
              {
                "name": "Picked Order Count"
              },
              {
                "name": "Open Style Count"
              },
              {
                "name": "Picked Style Count"
              },
              {
                "name": "Open + Pick Amount"
              },
              {
                "name": "Open + Pick Order Count"
              },
              {
                "name": "Open + Pick Units"
              },
              {
                "name": "Open + Pick Amount MTD"
              },
              {
                "name": "Open + Pick Order Count MTD"
              },
              {
                "name": "Open + Pick Units MTD"
              },
              {
                "name": "Open + Pick Amount YTD"
              },
              {
                "name": "Open + Pick Order Count YTD"
              },
              {
                "name": "Open + Pick Units YTD"
              },
              {
                "name": "Open + Pick AOV"
              },
              {
                "name": "Open + Pick AOV MTD"
              },
              {
                "name": "Open + Pick AOV YTD"
              },
              {
                "name": "Open + Pick AUR"
              },
              {
                "name": "Open + Pick AUR MTD"
              },
              {
                "name": "Open + Pick AUR YTD"
              },
              {
                "name": "Open + Pick UPT"
              },
              {
                "name": "Open + Pick UPT MTD"
              },
              {
                "name": "Open + Pick UPT YTD"
              },
              {
                "name": "Open + Pick School Count"
              },
              {
                "name": "Open + Pick SKU Count"
              },
              {
                "name": "Open + Pick Order Lines"
              },
              {
                "name": "Open + Pick Avg Units/Order"
              },
              {
                "name": "Open + Pick Customer Count"
              },
              {
                "name": "Open + Pick Gross Amount"
              },
              {
                "name": "Open + Pick Gross Amount MTD"
              },
              {
                "name": "Open + Pick Gross Amount YTD"
              },
              {
                "name": "Open + Pick Avg Lines/Order"
              },
              {
                "name": "Open + Pick Avg Units/Line"
              }
            ]
          },
          {
            "name": "Calendar",
            "columns": [
              {
                "name": "TIM_KEY"
              },
              {
                "name": "TIM_QUARTER"
              },
              {
                "name": "TIM_QUARTER_NAME"
              },
              {
                "name": "TIM_WEEK_OF_QUARTER"
              },
              {
                "name": "TIM_WEEK_START_DATE"
              },
              {
                "name": "TIM_WEEK_END_DATE"
              },
              {
                "name": "TIM_DAY_OF_WEEK"
              },
              {
                "name": "TIM_WEEKDAY_NAME"
              },
              {
                "name": "TIM_YEAR_MONTH"
              },
              {
                "name": "TIM_YEAR_WEEK"
              },
              {
                "name": "TIM_YEAR_MONTH_WEEK"
              },
              {
                "name": "TIM_AR_PERIOD"
              },
              {
                "name": "TIM_MONTH_NUM_NAME"
              },
              {
                "name": "TIM_MONTH_START"
              },
              {
                "name": "TIM_MONTH_END"
              },
              {
                "name": "TIM_DAY"
              },
              {
                "name": "TIM_NRF_YEAR"
              },
              {
                "name": "TIM_NRF_WEEK"
              },
              {
                "name": "TIM_NRF_YEAR_WEEK"
              },
              {
                "name": "TIM_NRF_MONTH"
              },
              {
                "name": "TIM_MWEEK_START_DATE"
              },
              {
                "name": "TIM_MWEEK_END_DATE"
              },
              {
                "name": "TIM_DAY_OF_MWEEK"
              },
              {
                "name": "DATE"
              },
              {
                "name": "MONTH"
              },
              {
                "name": "MONTH_NAME"
              },
              {
                "name": "WEEK_OF_MONTH"
              },
              {
                "name": "WEEK_OF_YEAR"
              },
              {
                "name": "YEAR"
              },
              {
                "name": "Week"
              },
              {
                "name": "LY Date"
              }
            ]
          },
          {
            "name": "DIM_CUSTOMER_MASTER",
            "columns": [
              {
                "name": "Customer"
              },
              {
                "name": "Customer_Name"
              },
              {
                "name": "School Group"
              },
              {
                "name": "Bulk_Rep"
              },
              {
                "name": "Sales_Rep"
              }
            ]
          },
          {
            "name": "DIM_LOCATION_MASTER",
            "columns": [
              {
                "name": "Location"
              },
              {
                "name": "Location_Name"
              },
              {
                "name": "Organization_Code"
              }
            ]
          },
          {
            "name": "DIM_ORD_TYPE",
            "columns": [
              {
                "name": "Order Type"
              },
              {
                "name": "Order Type Desc"
              },
              {
                "name": "Order Type Group"
              }
            ]
          },
          {
            "name": "FACT_FORECAST_YEAR",
            "columns": [
              {
                "name": "Forecast_Type"
              },
              {
                "name": "Forecast_Name"
              },
              {
                "name": "Order_Type"
              },
              {
                "name": "Date"
              },
              {
                "name": "Forecast_Quantity"
              },
              {
                "name": "Forecast_Cost_Amt"
              },
              {
                "name": "Forecast_Sales_Amt"
              },
              {
                "name": "Forecast_UPT"
              },
              {
                "name": "Forecast_OrderCount"
              },
              {
                "name": "Channel"
              }
            ],
            "measures": [
              {
                "name": "Forecast $_Year"
              },
              {
                "name": "Forecast Units_Year"
              },
              {
                "name": "Forecast OrderCount_Year"
              },
              {
                "name": "Fcst AUR_Year"
              },
              {
                "name": "Fcst UPT_Year"
              },
              {
                "name": "Fcst AOV_Year"
              },
              {
                "name": "Fcst AOV MTD"
              },
              {
                "name": "Fcst AOV YTD"
              },
              {
                "name": "Fcst AUR MTD"
              },
              {
                "name": "Fcst AUR YTD"
              },
              {
                "name": "Fcst UPT MTD"
              },
              {
                "name": "Fcst UPT YTD"
              },
              {
                "name": "Forecast $ MTD"
              },
              {
                "name": "Forecast $ YTD"
              },
              {
                "name": "% Fcst MTD"
              },
              {
                "name": "% Fcst YTD"
              }
            ]
          },
          {
            "name": "FACT_FORECAST_MONTH",
            "columns": [
              {
                "name": "Forecast_Type"
              },
              {
                "name": "Forecast_Name"
              },
              {
                "name": "Order_Type"
              },
              {
                "name": "Date"
              },
              {
                "name": "Forecast_Quantity"
              },
              {
                "name": "Forecast_Cost_Amt"
              },
              {
                "name": "Forecast_Sales_Amt"
              },
              {
                "name": "Forecast_UPT"
              },
              {
                "name": "Forecast_OrderCount"
              },
              {
                "name": "Channel"
              }
            ],
            "measures": [
              {
                "name": "Forecast $_Month"
              },
              {
                "name": "% Fcst"
              },
              {
                "name": "Fcst UPT"
              },
              {
                "name": "Fcst AOV"
              },
              {
                "name": "Fcst AUR"
              },
              {
                "name": "Forecast Units_Month"
              },
              {
                "name": "Forecast OrderCount_Month"
              }
            ]
          }
        ]
      }
    ],
    "roles": [
      {
        "name": "Read",
        "modelPermission": "read",
        "members": [
          {
            "memberName": "LOLLYNET_NJ\\Justin.Teague",
            "memberId": "S-1-5-21-1982618913-608062884-1415713722-39273"
          },
          {
            "memberName": "LOLLYNET_NJ\\Syed.Shah",
            "memberId": "S-1-5-21-1982618913-608062884-1415713722-40317"
          }
        ]
      }
    ],
    "annotations": [
      {
        "name": "__TEdtr",
        "value": "1"
      },
      {
        "name": "TabularEditor_SerializeOptions",
        "value": "{\"IgnoreInferredObjects\":true,\"IgnoreInferredProperties\":true,\"IgnoreTimestamps\":true,\"SplitMultilineStrings\":true,\"PrefixFilenames\":false,\"LocalTranslations\":true,\"LocalPerspectives\":true,\"LocalRelationships\":true,\"Levels\":[\"Data Sources\",\"Perspectives\",\"Relationships\",\"Roles\",\"Shared Expressions\",\"Tables\",\"Tables/Calculation Items\",\"Tables/Columns\",\"Tables/Hierarchies\",\"Tables/Measures\",\"Tables/Partitions\",\"Translations\"]}"
      }
    ]
  }
}